Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/controller/6rd/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/controller/6rd/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+module("luci.controller.6rd.portproxy", package.seeall)
+
+function index()
+        
+    local page = entry({"admin","6rd"}, template("6rd/overview"), "Tunneling", 90)
+    page.dependent=false
+
+    local page = entry({"admin", "6rd", "6RD-DHCP"}, cbi("6rd-dhcp"), "6RD-DHCP", 10)
+    page.dependent=false
+    page.hidden  = true -- In Order to hide from submenu list
+    page.index  = false
+
+--    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "6RD-Static", 20)
+    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "Tunnel configuration", 20)
+    page.dependent=false
+    page.hidden  = false
+
+    local page = entry({"admin", "6rd", "DisableTunnel"}, cbi("disabletunnel"), "Disable Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+    local page = entry({"admin", "6rd", "advanced-tunnel-settings"}, cbi("6rd-advance"), "Advanced Tunnel Settings", 30)
+    page.dependent=false
+   
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
+
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/controller/softwire/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/controller/softwire/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,51 @@
+module("luci.controller.softwire.portproxy", package.seeall)
+
+function index()
+
+    local page = entry({"admin","softwire"}, template("softwire/overview"), "Softwire", 80)
+    page.dependent=false
+    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel"}, cbi("softwire-tunnel"), "Tunnel configuration", 10)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-frag"}, cbi("softwire-misc"), "Tunnel Fragmentation", 15)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-adv"}, cbi("softwire-adv"), "Advanced Settings and status", 20)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd"}, cbi("softwire-portfwd"), "Manual Port Forwarding", 30)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd-limits"}, cbi("softwire-portfwd-limits"), "Manual Port Forwarding Limits", 40)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy-perm"}, cbi("softwire-portproxy-perm"), "Portproxy - permanent configuration", 50)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy"}, cbi("softwire-portproxy"), "Portproxy - temporary configuration", 60)
+--    page.dependent=false
+--    page.hidden  = true
+        
+    local page = entry({"admin", "softwire", "DS-Lite-Static"}, cbi("dslite-static"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = false
+    
+    local page = entry({"admin", "softwire", "DS-Lite-DHCP"}, cbi("dslite-dhcp"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-advance.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-advance.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,193 @@
+require "luci.ip"
+
+local returnForms = {}
+-- button styles
+local stopStyle="reset"
+local startStyle="reload"
+local enableStyle="apply"
+local disableStyle="remove"
+
+-- returns if specifid process is running or not
+function started(process)
+   if pid(process) then
+      return true
+   else
+      return false
+   end
+end
+
+-- returns if specified service is enabled or not
+function enabled(service)
+   return luci.sys.init.enabled(service)
+end
+
+-- returns PID of specified service
+function pid(process)
+   processes = luci.sys.process.list() -- get list of processes
+   -- processes is a table of tables
+   -- each entry specifies sigle process
+   -- each process is described with list of parameters
+   
+   for pid,procinfo in pairs(processes) do
+      if (string.find(procinfo["COMMAND"], process)) then
+	 return pid
+      end
+   end
+   return nil
+end
+
+-- returns description if service is started/stopped, enabled/disabled
+function status(service,process)
+   local s
+   if enabled(service) then
+      s = "enabled, "
+   else
+      s = "disabled, "
+   end
+   
+   if pid(process) then
+      s = s.."started"
+   else
+      s = s.."stopped"
+   end 
+
+   return s
+end
+-- Template Code ------------
+tunnelForm = SimpleForm("dhcp", "Advanced Tunnel Settings.", 
+		      "This section provides control for tunnel.")
+tunnelForm.reset = false  -- don't display reset button below this form
+tunnelForm.submit = false -- don't display reset button below this form
+
+
+tunnelForm:field(DummyValue, " "," ").statusString = "Current Status";
+--======================== DHCP STATUS AND CONTROLS ===========================--
+if (started("dhclient")) then
+   dhcpStop=tunnelForm:field(Button, "dhcpstop", "STOP")
+   dhcpStop.inputstyle = stopStyle
+   dhcpStop.statusString = "Running"
+   dhcpStop.forcedtitle = "DHCP Client"
+   dhcpStop.template = "6rd/button"
+   function dhcpStop.write(self, value)
+      os.execute("/etc/init.d/dhclient stop >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client stopped."
+   end
+
+else
+
+   dhcpStart=tunnelForm:field(Button, "dhcpstart", "START")
+   dhcpStart.inputstyle = startStyle
+   dhcpStart.statusString = "Stopped"
+   dhcpStart.forcedtitle = "DHCP Client"
+   dhcpStart.template = "6rd/button"
+   function dhcpStart.write(self, value)
+      os.execute("/etc/init.d/dhclient start >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client started."
+   end
+
+end
+
+
+--======================== RADVD STATUS AND CONTROLS ===========================--
+if (started("radvd")) then
+   radvdStop=tunnelForm:field(Button, "radvdstop", "STOP")
+   radvdStop.inputstyle = stopStyle
+   radvdStop.statusString = "Running"
+   radvdStop.forcedtitle = "RADVD"
+   radvdStop.template = "6rd/button"
+   function radvdStop.write(self, value)
+      os.execute("crontab /etc/config/emptycrontab &")
+      os.execute("/etc/init.d/radvd stop &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client stopped."
+   end
+
+else
+
+   radvdStart=tunnelForm:field(Button, "radvdstart", "Start")
+   radvdStart.inputstyle = startStyle
+   radvdStart.statusString = "Stopped"
+   radvdStart.forcedtitle = "RADVD"
+   radvdStart.template = "6rd/button"
+   function radvdStart.write(self, value)
+      os.execute("crontab /etc/config/radvdcrontab &")
+      os.execute("/sbin/forceStartRadvd.sh  &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client started."
+   end
+
+end
+
+
+
+--======================== DNS Masq STATUS AND CONTROLS ===========================--
+local dnsMasqStatus = luci.util.exec([[ps -a | grep 'dnsmasq' | wc -l]]);
+if (started("dnsmasq")) then
+   dnsStop=tunnelForm:field(Button, "dnsstop", "Stop")
+   dnsStop.inputstyle = stopStyle
+   dnsStop.statusString = "Running"
+   dnsStop.forcedtitle = "DNS Masq"
+   dnsStop.template = "6rd/button"
+   function dnsStop.write(self, value)
+      os.execute("killall dnsmasq >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DNS Masq client stopped."
+   end
+
+else
+
+   dnsStart=tunnelForm:field(Button, "dnsstart", "Start")
+   dnsStart.inputstyle = startStyle
+   dnsStart.statusString = "Stopped"
+   dnsStart.forcedtitle = "DNS Masq"
+   dnsStart.template = "6rd/button"
+   function dnsStart.write(self, value)
+      os.execute("/etc/init.d/dnsmasq start >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+     tunnelForm.message = "DNS Masq client started."
+   end
+
+end
+
+
+
+--======================== Tunnel STATUS AND CONTROLS ===========================--
+local tunnelStatus = luci.util.exec([[ifconfig | grep 'sit1' | wc -l]]);
+if (tonumber(tunnelStatus) > 0) then
+   tunnelStop=tunnelForm:field(Button, "6rdtunnelstop", "Disable")
+   tunnelStop.inputstyle = stopStyle
+   tunnelStop.statusString = "UP"
+   tunnelStop.forcedtitle = "Tunnel"
+   tunnelStop.template = "6rd/button"
+   function tunnelStop.write(self, value)
+      os.execute("/sbin/deletetunnel.sh >> /tmp/deleteTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "Tunnel client stopped."
+   end
+
+else
+
+   tunnelStart=tunnelForm:field(Button, "6rdtunnelstart", "Enable")
+   tunnelStart.inputstyle = startStyle
+   tunnelStart.statusString = "DOWN"
+   tunnelStart.forcedtitle = "Tunnel"
+   tunnelStart.template = "6rd/button"
+   function tunnelStart.write(self, value)
+      os.execute("/etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "6RD Tunnel client started."
+   end
+
+end
+
+return tunnelForm
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,349 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+local function getStaticWANip4addr()                                                                   
+	form = luci.util.exec([[echo $(uci -c /tmp/ get tunnel.static.WANip4addr)]])
+	if form ~= nil then                                                                                                                         
+                --form = string.match(form, "%d+\.%d+\.%d+\.%d+");                                                                                 
+        	return form                                                                                                                                     
+        end                                                                                                                                                      
+	return form;                                                                                                                                             
+end
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_6rdipv4masklength]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end 
+
+local function getIPv46rdBr() 
+   form = luci.util.exec([[cat /tmp/new_6rdbr]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefixLength()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "(.*)(::/)(%d+)", "%3")
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefix()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "::/%d+", "")
+	    return form
+   end
+   return nil;
+end
+
+local function getTunnelStatus()
+	local i6RDBr = getIPv46rdBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr)
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "WANip4addr" then 
+		luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "SubnetMaskLength" then 
+		luci.http.write(getSubnetMaskLength().."\n");			
+		end
+		if varData == "IPv46rdBr" then 
+		luci.http.write(getIPv46rdBr().."\n");			
+		end
+		if varData == "6rdPrefixLength" then 
+		luci.http.write(get6rdPrefixLength().."\n");			
+		end
+		if varData == "6rdPrefix" then 
+		luci.http.write(get6rdPrefix().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+		local currentTunnelMode = getTunnelMode();
+		if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+			local calculated6rdPrefixAjax = "Temp";
+			local calculated6rdPrefix = "Temp";
+
+			local wanIPv4Address = getWANip4addr();
+
+			local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.overridetunnel.IPv4MaskLength");
+			if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+			else 
+				IPv4SubnetMaskLength = getSubnetMaskLength();
+			end
+			local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefixLength");
+			if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+			else 
+				IPv6PrefixLength = get6rdPrefixLength();
+			end
+			local IPv6Prefix = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefix");
+			if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+			else 
+				IPv6Prefix = get6rdPrefix();
+			end
+			if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+				calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+				calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+				calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+			else
+				calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+			end
+			luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+		else
+			luci.http.write(" \n");
+		end
+	end
+else
+	mantun = Map("mantun", "6RD DHCP", "This page allows 6RD tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "2"
+	
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP", "If not done then Before configuring DHCP based 6rd ,please configure wan interface from menu NETWORK->INTERFACE->WAN to the dhcp mode then continue ..");
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	end
+	TunnelMode:depends("TunnelType","2")
+	TunnelMode.onValueChange = "0";
+ 	TunnelMode.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=2"
+	TunnelMode.template = "6rd/lvalue"
+
+---- DHCP Configuration Start Here ---
+
+	d = mantun:section(NamedSection, "overridetunnel", "overridetunnel", "Dynamic Configuration");
+	headerFieldR = d:option(DummyValue, " "," ");
+	headerFieldR.forcedtitle = "6RD Configuration";
+	headerFieldR.styleClass = "cbi-blue-bold-left";
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = d:option(DummyValue, " "," ");
+	headerField.statusString = "DHCP Values";
+	headerField.styleClass = "cbi-blue-bold";
+	headerField.template = "6rd/dvalue"
+	local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")  
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)
+	else
+		tunnelPingTime = 5
+	end 
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = true
+
+
+	local wanIPv4Addr = getWANip4addr();
+	  	ipv4WANAdd = d:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "")
+		ipv4WANAdd.value = "--";
+		ipv4WANAdd.name = "WANip4addr";
+		ipv4WANAdd.rmempty = false;
+		ipv4WANAdd.statusString = wanIPv4Addr;
+	ipv4WANAdd.template = "6rd/dvalue"
+  
+	ipv4MaskLength= d:option(DummyValue, "IPv4MaskLength", "IPv4 Mask Length", "");
+	ipv4MaskLength.value = "";
+	ipv4MaskLength.name = "IPv4MaskLength";
+
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		ipv4MaskLength.statusString = IPv4SubnetMaskLength;
+	else
+		ipv4MaskLength.statusString = "--";
+	end
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 33 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end
+	ipv4MaskLength.template = "6rd/dvalue"
+
+	i6rdBrDhcp = d:option(DummyValue, "i6RDBr", "6RD BR", "");
+	i6rdBrDhcp.value = "";
+	i6rdBrDhcp.template = "6rd/dvalue"
+	i6rdBrDhcp.name = "i6RDBr";
+
+	local IPv46rdBr = getIPv46rdBr();
+	if IPv46rdBr ~= nil and #IPv46rdBr > 7 then
+		i6rdBrDhcp.statusString = IPv46rdBr;
+	else
+		i6rdBrDhcp.statusString = " ";
+	end
+
+
+
+	i6rdPrefixDhcp = d:option(DummyValue, "i6RDPrefix", "6RD Prefix", "");
+	i6rdPrefixDhcp.value = "";
+	i6rdPrefixDhcp.name = "i6RDPrefix";
+	i6rdPrefixDhcp.template = "6rd/dvalue"
+	local IPv6Prefix = get6rdPrefix();
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+		i6rdPrefixDhcp.statusString = IPv6Prefix;
+	else
+		i6rdPrefixDhcp.statusString = "--";
+	end
+
+	i6rdPrefixDhcpLength= d:option(DummyValue, "i6RDPrefixLength", "6RD Prefix Length", "");
+	i6rdPrefixDhcpLength.value = "";
+	i6rdPrefixDhcpLength.name = "i6RDPrefixLength";
+	i6rdPrefixDhcpLength.template = "6rd/dvalue"
+	local IPv6PrefixLength = get6rdPrefixLength();
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+		i6rdPrefixDhcpLength.statusString = IPv6PrefixLength;
+	else
+		i6rdPrefixDhcpLength.statusString = "--";
+	end
+
+ 	function i6rdPrefixDhcpLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 65 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end 
+
+	hupDhcp = d:option(DummyValue,"6RDPrefixCalc","Calculated Prefix", "");
+	hupDhcp.value = "";
+	hupDhcp.template = "6rd/dvalue"
+
+ 
+	hupDhcp.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1";
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+	local wanIPv4Address = getWANip4addr();
+        local tMode  = luci.util.exec([[uci get network.wan.proto]])                                     
+        --if tMode ~= nil and #tMode > 0 and tMode == "static" then                                      
+        if tMode ~= nil and #tMode > 0 then                                                              
+                wanIPv4Address =  getStaticWANip4addr()                                                  
+	end 
+	local IPv4SubnetMaskLength =  getSubnetMaskLength();
+	local IPv6PrefixLength =  get6rdPrefixLength();
+	local IPv6Prefix = get6rdPrefix();
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix);
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??..";
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	local currentTunnelMode = getTunnelMode();
+	if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+		hupDhcp.statusString = calculated6rdPrefix ; 
+	else
+		hupDhcp.statusString = " "; 
+	end
+
+	TunnelStatus = d:option(DummyValue, "tunnelStatus","Tunnel Status");
+--	local tunnel_status = getTunnelStatus()
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true;
+	TunnelStatus.name = "TunnelStatus";
+	TunnelStatus.isButton = true;
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+
+  	mSSOptionRewrite = d:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.");
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+	mSSOptionRewrite.template = "6rd/fvalue"
+
+  	i6RDMTU= d:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+        refreshButton = d:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+
+---- DHCP Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/6rd-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,379 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function tunnelMode()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelMode")
+   return form
+end
+
+
+local function tunnelType()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelType")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelType")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	   return form
+   end
+   return form;
+end
+local function getStaticWANip4addr()
+   form = luci.util.exec([[echo $(ifconfig eth1 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}')]])
+   if form ~= nil then
+	    --form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return form;
+end
+
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_subnet_mask]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6RDBr()
+   local form = luci.http.formvalue("cbid.mantun.static.i6RDBr")
+   if form ~= nil then
+--      form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "i6RDBr")
+--   form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+   return form
+end
+
+local function getTunnelStatus()
+	local i6RDBr = get6RDBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr )
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+
+
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 then
+		if varData == "WANip4addr" then 
+			luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+		local calculated6rdPrefixAjax = "Temp";
+		local calculated6rdPrefix = "Temp";
+
+		--local wanIPv4Address = getWANip4addr();
+		local wanIPv4Address = getStaticWANip4addr();
+
+		local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength");
+		if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		else 
+			--IPv4SubnetMaskLength = getSubnetMaskLength();
+		end
+		local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength");
+		local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+		if (IPv6Prefix.match(IPv6Prefix, "::")) then
+			luci.http.write("Invalid 6RD Prefix.\n")
+		end
+
+		if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+			calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+			calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+			calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+		else
+			calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+		end
+		luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+	end
+else
+	mantun = Map("mantun", "6RD Static", "This page allows 6RD tunnel configuration. ");
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.");
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType";
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	local tType = luci.http.formvalue("cbid.mantun.general.TunnelType")
+	if tType ~= nil and #tType > 0 then
+		TunnelType.setForceDefault = tType
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelType")
+		if form ~= nil and tonumber(form) == 0 then
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		elseif form ~= nil and tonumber(form) == 3 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "DisableTunnel") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		end
+	end	
+
+
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP")
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.value = tunnelMode()
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+		if form ~= nil and tonumber(form) == 1 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "6RD-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1")
+		end
+	end
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";
+	TunnelMode.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=2";
+ 	TunnelMode.template = "6rd/lvalue"
+
+
+---- Static Configuration Start Here ---
+
+	m = mantun:section(NamedSection, "static", "static", "Static Configuration");
+	headerFieldR = m:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "6RD Configuration"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = m:option(DummyValue, " "," ")
+	headerField.statusString = "DHCP Values"
+	headerField.styleClass = "cbi-blue-bold"
+	headerField.template = "6rd/dvalue"
+        local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")                                                            
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)                                     
+	else                                                                                  
+		tunnelPingTime = 5                                                            
+	end                                                                                   
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = false
+
+	local wanIPv4Addr = getWANip4addr();
+  	ipv4WANAdd = m:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "v4 WAN Address.")
+	ipv4WANAdd.value = " ";
+	ipv4WANAdd.name = "WANip4addr"
+	ipv4WANAdd.largedescription = "This ip address provided by ISP will be configured from menu NETWORK->INTERFACE->WAN used for 6rd tunnel setup."
+	local wanIPv4Address = getStaticWANip4addr()
+	local tMode  = luci.util.exec([[uci get network.wan.proto]])
+	if tMode ~= nil and #tMode > 0 and tMode:match("static") then
+--		wanIPv4Address =  getStaticWANip4addr()
+		ipv4WANAdd.value = wanIPv4Address
+	else
+		if (wanIPv4Address ~= nil and #wanIPv4Address > 0) then
+			ipv4WANAdd.statusString = wanIPv4Address
+		else
+			ipv4WANAdd.statusString = " ";
+		end
+	end
+	ipv4WANAdd.template = "6rd/dvalue"
+
+
+  	ipv4MaskLength= m:option(Value, "IPv4MaskLength", "IPv4 Mask Length", "Please enter IPv4 mask length between 0-32.");
+  	ipv4MaskLength.rmempty = false;
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	ipv4MaskLength.largedescription = "This is not related to wan interface ipv4 address subnet mask length(CIDR).This is 6rd specific provided by ISP."
+
+	ipv4MaskLength.template = "6rd/value"
+	ipv4MaskLength.dfault = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength") 
+
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > -1 and v < 33 ) then
+				return v
+			else
+				ipv4MaskLength.message = "Please enter valid subnet mask length.";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	M6rdBr = m:option(Value, "i6RDBr", "6RD BR", "Please enter valid IPv4 address or FQDN. e.g.  8.8.8.8 or comcast.com");
+  	M6rdBr.rmempty = false;
+	M6rdBr.template = "6rd/value"
+	M6rdBr.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDBr") 
+	M6rdBr.largedescription = "This is Border Relay ipv4 address provided by ISP ,the 6rd tunnel remote endpoint."
+
+  	M6rdPrefix = m:option(Value, "i6RDPrefix", "6RD Prefix", "Please enter valid IPv6 prefix without :: at end. e.g.  2001:0:0A01");
+  	M6rdPrefix.rmempty = false;
+	M6rdPrefix.template = "6rd/value"
+	M6rdPrefix.largedescription = "This prefix is provided by ISP for the automatic configuration of ipv6 address over LAN interface and hosts behind the lan."
+	M6rdPrefix.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+
+ 	function M6rdPrefix:validate(value) 
+ 		if (value ~= nil) then
+			if (value.match(value, "::")) then
+				return nil
+			else
+				return value
+			end
+		else
+			return nil
+		end
+	end
+
+
+  	M6rdPrefixLength= m:option(Value, "i6RDPrefixLength", "6RD Prefix Length", "Please enter IPv6 mask length between 1-64.");
+  	M6rdPrefixLength.rmempty = false;
+	M6rdPrefixLength.template = "6rd/value"
+	M6rdPrefixLength.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength") 
+ 	function M6rdPrefixLength:validate(value) 
+ 		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 0 and v < 65 ) then
+				return v
+			else
+		    		return nil
+			end
+		else
+			return nil
+		end
+	end 
+
+        hup = m:option(DummyValue,"6RDPrefixCalc","6RDPrefixCalc");
+
+
+	hup.overwrite = true;
+	hup.name = "6RDPrefixCalc";
+	hup.isButton = true;
+	hup.buttonValue = "6RDPrefixCalc"
+	hup.buttonName = "ajax-6RDPrefixCalc"
+                                                                                                  
+	hup.template = "6rd/dvalue"
+	hup.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0";
+
+
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+
+	local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength")
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+	else 
+		IPv4SubnetMaskLength = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength")
+	end	
+
+	local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength")
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+	else 
+		IPv6PrefixLength = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength")
+	end	
+	
+	local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+	else 
+		IPv6Prefix = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+	end
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix)
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??.."
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	hup.value = calculated6rdPrefix .. " "
+
+	TunnelStatus = m:option(DummyValue, "tunnelStatus","Tunnel Status")
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true
+	TunnelStatus.name = "TunnelStatus"
+	TunnelStatus.isButton = true
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+	TunnelStatus.largedescription = "Whenever your tunnel configuration is correct and you are succesfully connected to the ISP BR relay then the status will be up."
+
+  	mSSOptionRewrite = m:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.")
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.template = "6rd/fvalue"
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+
+  	i6RDMTU= m:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = luci.model.uci.cursor():get("mantun", "static", "i6rdMTU") or "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+        refreshButton = m:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+         
+---- Static Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/disabletunnel.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/disabletunnel.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,31 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+	mantun = Map("mantun", "Disabled tunnel", "This page allows to disable tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "Tunnel Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.setForceDefault = "3"
+	TunnelType.template = "6rd/lttypevalue"
+--[[
+	if luci.http.formvalue("cbid.mantun.general.TunnelType") ~= nil then
+		os.execute("sleep 2 && /etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+	end  
+]]--
+	table.insert(returnForms, mantun)
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/dslite-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/dslite-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,293 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getRemoteip6addrValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_softwire]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getLocalip6addrValue()
+	form = luci.util.exec([[cat /tmp/ip6_address]])
+	if form ~= nil then
+		local len = luci.util.exec([[cat /tmp/ip6_prefixlen]])
+		if len ~= nil and #len > 0 then
+--			return form .. "/" .. len
+		end
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6dnsValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_name_servers]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIp6gatewayValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_defgateway]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getPrefixDelegationValue()
+	form = luci.util.exec([[cat /tmp/ip6_prefix]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6gateValue()
+	form = luci.util.exec([[echo $(ifconfig br-lan | grep "Scope:Global" | grep 'inet6 addr:'| cut -d\s -f2 | awk '{ print $3}')]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar")
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "aftr6addr" then 
+			luci.http.write(getRemoteip6addrValue().."\n");			
+		end
+		if varData == "localip6addr" then 
+			luci.http.write(getLocalip6addrValue() .."\n");			
+		end
+		if varData == "dhcpv6_name_servers" then 
+			luci.http.write(getIpv6dnsValue().."\n");			
+		end
+		if varData == "ip6gateway" then 
+			luci.http.write(getIp6gatewayValue() .."\n");			
+		end
+		if varData == "prefixDelegation" then 
+			luci.http.write(getPrefixDelegationValue().."\n");			
+		end
+		if varData == "ipv6gate" then 
+			luci.http.write(getIpv6gateValue().."\n");			
+		end
+	else
+		luci.http.write(" \n");
+	end
+
+
+else
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+             -- "name of the cfg file", "page title", "description"
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+                	local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static")
+                        luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=0")                                                          
+		end                                                                                                                                                 
+	end
+
+	TunnelMode:depends("TunnelType","0")
+	TunnelMode.onValueChange = "0"
+	TunnelMode.fname = "TunnelMode"
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue"
+
+	overSection = mantun:section(NamedSection, "overridetunnel", "mantun", 
+				   "DS-Lite parameters","IPv6 parameters are specified here.")
+
+	dSLiteCapL = overSection:option(DummyValue, " "," ");
+	dSLiteCapL.forcedtitle = "DS-Lite Configuration";
+	dSLiteCapL.styleClass = "cbi-blue-bold-left";
+	dSLiteCapL.template = "6rd/dvalue"
+
+	dSLiteCapR = overSection:option(DummyValue, " "," ");
+	dSLiteCapR.statusString = "DHCP Values";
+	dSLiteCapR.styleClass = "cbi-blue-bold";
+	dSLiteCapR.isAjaxEnabled = true;
+	dSLiteCapR.reloadValues = true;
+	dSLiteCapR.template = "softwire/dvalue"
+
+	aftr6addr = overSection:option(DummyValue, "Remoteip6addr", "AFTR IPv6 Address")
+	aftr6addr.rmempty = false
+	aftr6addr.template = "6rd/dvalue"
+	aftr6addr.name = "aftr6addr"
+	local remoteip6addr = getRemoteip6addrValue()
+	if remoteip6addr ~= nil and #remoteip6addr > 0 then
+		aftr6addr.statusString = remoteip6addr
+	else
+		aftr6addr.statusString = " "
+	end
+
+	localip6addr = overSection:option(DummyValue, "Localip6addr", "WAN IPv6 Address")
+	localip6addr.rmempty = true
+	localip6addr.template = "6rd/dvalue"
+	localip6addr.name = "localip6addr"
+	local ip6addr = getLocalip6addrValue()
+	if ip6addr ~= nil and #ip6addr > 0 then
+		localip6addr.statusString = ip6addr
+	else
+		localip6addr.statusString = " "
+	end
+
+	dhcpv6_name_servers = overSection:option(Value,"Ipv6dns", "Primary DNS (IPv6)","e.g. 2001::2")
+	dhcpv6_name_servers.rmempty = true
+	dhcpv6_name_servers.template = "6rd/value"
+	dhcpv6_name_servers.statusString = getIpv6dnsValue()
+	dhcpv6_name_servers.name = "dhcpv6_name_servers"
+	dhcpv6_name_servers.largedescription="IPv6 address of DNS server provided by ISP used for FQDN resolution."
+	local dns6addr = getIpv6dnsValue()
+	if dns6addr ~= nil and #dns6addr > 0 then
+		dhcpv6_name_servers.statusString = dns6addr
+	else
+		dhcpv6_name_servers.statusString = " "
+	end
+
+
+
+	ip6gateway = overSection:option(Value, "ip6gateway", "IPv6 WAN default gateway", "e.g. 2001::1")
+	ip6gateway.rmempty = true
+	ip6gateway.template = "6rd/value"
+	ip6gateway.name = "ip6gateway"
+	ip6gateway.largedescription = "IPv6 address of the Default Gateway provided by ISP used to route non-local ipv6 packets."
+	local v6gateway = getIp6gatewayValue()
+	if v6gateway ~= nil and #v6gateway > 0 then
+		ip6gateway.statusString = v6gateway
+	else
+		ip6gateway.statusString = " "
+	end
+
+
+	prefixDelegation = overSection:option(DummyValue, "PrefixDelegation", "IPv6 Prefix Delegation")
+	prefixDelegation.rmempty = false
+	prefixDelegation.template = "6rd/dvalue" 
+	prefixDelegation.name = "prefixDelegation"
+	local v6prefix = getPrefixDelegationValue()
+	if v6prefix ~= nil and #v6prefix > 0 then
+		prefixDelegation.statusString = v6prefix
+	else
+		prefixDelegation.statusString = " "
+	end
+
+
+	ipv6gate = overSection:option(DummyValue, "Ipv6gate", "IPv6 LAN Address")
+	ipv6gate.rmempty = false
+	ipv6gate.template = "6rd/dvalue"
+	ipv6gate.name = "ipv6gate"
+	local v6prefix = getIpv6gateValue()
+	if v6gate ~= nil and #v6gate > 0 then
+		ipv6gate.statusString = v6gate
+	else
+		ipv6gate.statusString = " "
+	end
+
+
+	headerFieldR = overSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+
+  	DFBitState = overSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= overSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.overridetunnel.v4SMTU"
+	v6SMTU.opt="sub"
+
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= overSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.");
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.overridetunnel.v6SMTU"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	v4SMTU.opt="add"
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/dslite-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/model/cbi/dslite-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,162 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1" )
+		end                                                                                                                                                 
+	end
+	                                                                                                                                                         
+	TunnelMode:depends("TunnelType","0")                                                                                                                        
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";                                                                                                                            
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue" 
+      
+	mantunDsLite = Map("mantun", "DS-Lite manual configuration",
+			 "This section defines DS-Lite configuration "..
+			 "running in static (manual) mode. Parameters "..
+			 "will be stored in /etc/config/mantun configuration file.")
+
+	dsStaticSection = mantun:section(NamedSection, "static", "static", 
+					     "DS-Lite parameters","Those parameters define static (manual) configuration of DS-Lite tunnel.")
+	localip6addr  = dsStaticSection:option(Value,"Localip6addr", "B4 WAN IPv6 Address", "e.g. 2001:db8::1/32")
+	localip6addr.rmempty = false
+	localip6addr.template = "6rd/value"
+	localip6addr.largedescription = "IPv6 address for the wan interface provided by ISP for basic ipv6 connectivity."
+
+	remoteip6addr = dsStaticSection:option(Value,"Remoteip6addr", "AFTR IPv6 Address", "e.g. 2001:db8::8")
+	remoteip6addr.rmempty = false
+	remoteip6addr.template = "6rd/value"
+	remoteip6addr.largedescription = "IPv6 address of the ISP's AFTR housed by ISP used for remote tunnel endpoint."
+
+	lanipv6addr   = dsStaticSection:option(Value,"LANip6addr", "B4 LAN IPv6 Address", "e.g. 2003:23::1/64")
+	lanipv6addr.rmempty = false
+	lanipv6addr.largedescription = "Configure ipv6 address with the prefix length of /64 accordingly or specified by ISP from the subnet of delegated prefix in the immidiate below button."
+	lanipv6addr.template = "6rd/value"
+
+	pd            = dsStaticSection:option(Value,"PrefixDelegation", "IPv6 Delegated Prefix", "e.g. 2003:23::/64")
+	pd.rmempty = false
+	pd.largedescription = "Configure ipv6 prefix provided by ISP which is used for configuring this B4 LAN ipv6 address."
+	pd.template = "6rd/value"
+	
+	ip6gw         = dsStaticSection:option(Value,"Ipv6gate", "IPv6 Gateway Address", "IPv6 Nexthop Address")
+	ip6gw.rmempty = false
+	ip6gw.largedescription = "Configure IPv6 address of the gateway provided by ISP for the routing of non-local ipv6 pcakets."
+	ip6gw.template = "6rd/value"
+
+	ip6dns        = dsStaticSection:option(Value,"Ipv6dns", "Primary DNS", "e.g. 2001:db8::9")
+	ip6dns.rmempty = false
+	ip6dns.largedescription = "Configure IPv6 address of DNS server provided by ISP used for FQDN resolution.use space for more than one ip address entry."
+	ip6dns.template = "6rd/value"
+
+	headerFieldR = dsStaticSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+  	DFBitState = dsStaticSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= dsStaticSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.static.v4SMTU"
+	v6SMTU.opt="sub"
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= dsStaticSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.")
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.static.v6SMTU"
+	v4SMTU.opt="add"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/button.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/button.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,25 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: button.htm 3558 2008-10-11 11:40:44Z Cyrus $
+
+-%>
+<%+6rd/full_valueheader%>
+	<% if self:cfgvalue(section) ~= false then %>
+		<% if self.isButton then %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+		<% else %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="submit"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", self.title)%> />
+		<% end %>
+	<% else %>
+		-
+	<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+6rd/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+		<%- if self.statusString and  #self.statusString > 0 then -%>
+			<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+				<%-=self.statusString-%>
+			</label>
+		<%- end -%>
+		<% if self.description and #self.description > 0 then -%>
+			<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+				<br />
+			<%- end %>
+			<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+				<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+				<%=self.description%>
+			</div>
+		<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,155 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=WANip4addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#WANip4addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=tunnelStatus",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#TunnelStatus').html(lines[0]);
+						}
+					});
+					<%- if self.isDhpc then -%>
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=IPv46rdBr",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDBr').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefixLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefixLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefix').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=SubnetMaskLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#IPv4MaskLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=Updated_Prefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$("label#DHCP").html(lines[0]);	
+							}
+						});
+					<%- end -%>
+				}
+			<%- end -%>
+			$('#ajax-6RDPrefixCalc').click(function() {
+				var inputStr = '';
+				jQuery.each($('form'),function() {
+					jQuery.each($(this).find('input'),function() {
+						if( $(this).attr("name") ){
+							if($(this).attr("type") != "submit"){
+								if( $(this).attr("type") != "button" ){
+									inputStr = inputStr + "&#38;" + $(this).attr("name") + '=' + $(this).val();
+								}
+							}
+						}
+					});
+				});
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + inputStr,
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#6RDPrefixCalc").html(lines[0]);	
+					}
+				});
+			});
+			$('#ajax-reconnect').click(function() {
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=reconnect6rdtunnel",
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#TunnelStatus").html(lines[0]);	
+					}
+				});
+			});
+			$('#refresh').click(function() {
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			});
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/fvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/fvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,17 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: fvalue.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input class="cbi-input-checkbox" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="checkbox"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self:cfgvalue(section) == self.enabled, "checked", "checked") %> value="1" />
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/lttypevalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/lttypevalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,54 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect) {
+			if(objSelect.value == '0') {
+				window.location.href = "<%=controller%>/admin/softwire/DS-Lite-Static?" + "cbid.mantun.general.TunnelType=0"
+			} else if(objSelect.value == '1') {
+				window.location.href = "<%=controller%>/admin/softwire/Softwire-Static?" + "cbid.mantun.general.TunnelType=1"
+			} else if(objSelect.value == '2') {
+				window.location.href = "<%=controller%>/admin/6rd/6RD-Static?" + "cbid.mantun.general.TunnelType=2"
+			} else if(objSelect.value == '3') {
+				window.location.href = "<%=controller%>/admin/6rd/DisableTunnel?" + "cbid.mantun.general.TunnelType=3"
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/lvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/lvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect){
+			if(objSelect.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,6 @@
+<%+header%>
+<h2>Tunneling Configuration</h2>
+
+<p>This section of the Web GUI is dedicated to 6RD/DS-Lite tunnel configuration:
+</p>
+<%+footer%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/value.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/6rd/value.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: value.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input type="<%=self.password and 'password" class="cbi-input-password' or 'text" class="cbi-input-text' %>" <% if self.onlostfocus and self.opt then -%> onblur="javsacript:checkSMTU(this, '<%=self.onlostfocus%>' , '<%=self.opt or "none" %>');" <% end -%>   onchange="cbi_d_update(this.id);moveto();"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", (self.forcedvalue or self:cfgvalue(section) or self.default )) .. ifattr(self.size, "size")%> />
+	<% if #self.keylist > 0 then -%>
+	<script type="text/javascript">
+		cbi_combobox_init('<%=cbid%>', {
+		<%-
+			for i, k in ipairs(self.keylist) do
+		-%>
+			<%-=string.format("%q", k) .. ":" .. string.format("%q", self.vallist[i])-%>
+			<%-if i<#self.keylist then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+		}, '<%- if not self.rmempty and not self.optional then -%>
+			<%-:cbi_select-%>
+		<%- end -%>', '
+		<%- if self.combobox_manual then -%>
+			<%-=self.combobox_manual-%>
+		<%- else -%>
+			<%-:cbi_manual-%>
+		<%- end -%>');
+	</script>
+	<% end -%>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		moveto (){
+			if(this.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<% end -%>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+softwire/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+softwire/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+	<%- if self.statusString and  #self.statusString > 0 then -%>
+		<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+			<%-=self.statusString-%>
+		</label>
+	<%- end -%>
+	<% if self.description and #self.description > 0 then -%>
+		<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+			<br />
+		<%- end %>
+		<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+			<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+			<%=self.description%>
+		</div>
+	<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,110 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=aftr6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#aftr6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=localip6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#localip6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=dhcpv6_name_servers",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#dhcpv6_name_servers').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ip6gateway",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#ip6gateway').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=prefixDelegation",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#prefixDelegation").html(lines[0]);	
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ipv6gate",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#ipv6gate").html(lines[0]);	
+						}
+					});
+				}
+			<%- end -%>
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/dist/usr/lib/lua/luci/view/softwire/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,12 @@
+<%+header%>
+<h2>Softwire configuration</h2>
+
+<p>This section of the Web GUI is dedicated to tunnel configuration:
+Softwire (IPv6 over IPv4) or <abbr title="Dual-Stack
+Lite">DS-Lite</abbr> (IPv4 over IPv6). Related topics - 
+fragmentation, <abbr title="Maximum Transmission Unit">MTU</abbr>, 
+services and tunnel status, portproxy (a tool used for automatic port
+configuration, using NAT-PMP and UPnP) and manual port forwarding
+configuration are also available.</p>
+
+<%+footer%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/controller/6rd/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/controller/6rd/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+module("luci.controller.6rd.portproxy", package.seeall)
+
+function index()
+        
+    local page = entry({"admin","6rd"}, template("6rd/overview"), "Tunneling", 90)
+    page.dependent=false
+
+    local page = entry({"admin", "6rd", "6RD-DHCP"}, cbi("6rd-dhcp"), "6RD-DHCP", 10)
+    page.dependent=false
+    page.hidden  = true -- In Order to hide from submenu list
+    page.index  = false
+
+--    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "6RD-Static", 20)
+    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "Tunnel configuration", 20)
+    page.dependent=false
+    page.hidden  = false
+
+    local page = entry({"admin", "6rd", "DisableTunnel"}, cbi("disabletunnel"), "Disable Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+    local page = entry({"admin", "6rd", "advanced-tunnel-settings"}, cbi("6rd-advance"), "Advanced Tunnel Settings", 30)
+    page.dependent=false
+   
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
+
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/controller/softwire/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/controller/softwire/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,51 @@
+module("luci.controller.softwire.portproxy", package.seeall)
+
+function index()
+
+    local page = entry({"admin","softwire"}, template("softwire/overview"), "Softwire", 80)
+    page.dependent=false
+    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel"}, cbi("softwire-tunnel"), "Tunnel configuration", 10)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-frag"}, cbi("softwire-misc"), "Tunnel Fragmentation", 15)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-adv"}, cbi("softwire-adv"), "Advanced Settings and status", 20)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd"}, cbi("softwire-portfwd"), "Manual Port Forwarding", 30)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd-limits"}, cbi("softwire-portfwd-limits"), "Manual Port Forwarding Limits", 40)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy-perm"}, cbi("softwire-portproxy-perm"), "Portproxy - permanent configuration", 50)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy"}, cbi("softwire-portproxy"), "Portproxy - temporary configuration", 60)
+--    page.dependent=false
+--    page.hidden  = true
+        
+    local page = entry({"admin", "softwire", "DS-Lite-Static"}, cbi("dslite-static"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = false
+    
+    local page = entry({"admin", "softwire", "DS-Lite-DHCP"}, cbi("dslite-dhcp"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-advance.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-advance.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,193 @@
+require "luci.ip"
+
+local returnForms = {}
+-- button styles
+local stopStyle="reset"
+local startStyle="reload"
+local enableStyle="apply"
+local disableStyle="remove"
+
+-- returns if specifid process is running or not
+function started(process)
+   if pid(process) then
+      return true
+   else
+      return false
+   end
+end
+
+-- returns if specified service is enabled or not
+function enabled(service)
+   return luci.sys.init.enabled(service)
+end
+
+-- returns PID of specified service
+function pid(process)
+   processes = luci.sys.process.list() -- get list of processes
+   -- processes is a table of tables
+   -- each entry specifies sigle process
+   -- each process is described with list of parameters
+   
+   for pid,procinfo in pairs(processes) do
+      if (string.find(procinfo["COMMAND"], process)) then
+	 return pid
+      end
+   end
+   return nil
+end
+
+-- returns description if service is started/stopped, enabled/disabled
+function status(service,process)
+   local s
+   if enabled(service) then
+      s = "enabled, "
+   else
+      s = "disabled, "
+   end
+   
+   if pid(process) then
+      s = s.."started"
+   else
+      s = s.."stopped"
+   end 
+
+   return s
+end
+-- Template Code ------------
+tunnelForm = SimpleForm("dhcp", "Advanced Tunnel Settings.", 
+		      "This section provides control for tunnel.")
+tunnelForm.reset = false  -- don't display reset button below this form
+tunnelForm.submit = false -- don't display reset button below this form
+
+
+tunnelForm:field(DummyValue, " "," ").statusString = "Current Status";
+--======================== DHCP STATUS AND CONTROLS ===========================--
+if (started("dhclient")) then
+   dhcpStop=tunnelForm:field(Button, "dhcpstop", "STOP")
+   dhcpStop.inputstyle = stopStyle
+   dhcpStop.statusString = "Running"
+   dhcpStop.forcedtitle = "DHCP Client"
+   dhcpStop.template = "6rd/button"
+   function dhcpStop.write(self, value)
+      os.execute("/etc/init.d/dhclient stop >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client stopped."
+   end
+
+else
+
+   dhcpStart=tunnelForm:field(Button, "dhcpstart", "START")
+   dhcpStart.inputstyle = startStyle
+   dhcpStart.statusString = "Stopped"
+   dhcpStart.forcedtitle = "DHCP Client"
+   dhcpStart.template = "6rd/button"
+   function dhcpStart.write(self, value)
+      os.execute("/etc/init.d/dhclient start >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client started."
+   end
+
+end
+
+
+--======================== RADVD STATUS AND CONTROLS ===========================--
+if (started("radvd")) then
+   radvdStop=tunnelForm:field(Button, "radvdstop", "STOP")
+   radvdStop.inputstyle = stopStyle
+   radvdStop.statusString = "Running"
+   radvdStop.forcedtitle = "RADVD"
+   radvdStop.template = "6rd/button"
+   function radvdStop.write(self, value)
+      os.execute("crontab /etc/config/emptycrontab &")
+      os.execute("/etc/init.d/radvd stop &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client stopped."
+   end
+
+else
+
+   radvdStart=tunnelForm:field(Button, "radvdstart", "Start")
+   radvdStart.inputstyle = startStyle
+   radvdStart.statusString = "Stopped"
+   radvdStart.forcedtitle = "RADVD"
+   radvdStart.template = "6rd/button"
+   function radvdStart.write(self, value)
+      os.execute("crontab /etc/config/radvdcrontab &")
+      os.execute("/sbin/forceStartRadvd.sh  &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client started."
+   end
+
+end
+
+
+
+--======================== DNS Masq STATUS AND CONTROLS ===========================--
+local dnsMasqStatus = luci.util.exec([[ps -a | grep 'dnsmasq' | wc -l]]);
+if (started("dnsmasq")) then
+   dnsStop=tunnelForm:field(Button, "dnsstop", "Stop")
+   dnsStop.inputstyle = stopStyle
+   dnsStop.statusString = "Running"
+   dnsStop.forcedtitle = "DNS Masq"
+   dnsStop.template = "6rd/button"
+   function dnsStop.write(self, value)
+      os.execute("killall dnsmasq >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DNS Masq client stopped."
+   end
+
+else
+
+   dnsStart=tunnelForm:field(Button, "dnsstart", "Start")
+   dnsStart.inputstyle = startStyle
+   dnsStart.statusString = "Stopped"
+   dnsStart.forcedtitle = "DNS Masq"
+   dnsStart.template = "6rd/button"
+   function dnsStart.write(self, value)
+      os.execute("/etc/init.d/dnsmasq start >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+     tunnelForm.message = "DNS Masq client started."
+   end
+
+end
+
+
+
+--======================== Tunnel STATUS AND CONTROLS ===========================--
+local tunnelStatus = luci.util.exec([[ifconfig | grep 'sit1' | wc -l]]);
+if (tonumber(tunnelStatus) > 0) then
+   tunnelStop=tunnelForm:field(Button, "6rdtunnelstop", "Disable")
+   tunnelStop.inputstyle = stopStyle
+   tunnelStop.statusString = "UP"
+   tunnelStop.forcedtitle = "Tunnel"
+   tunnelStop.template = "6rd/button"
+   function tunnelStop.write(self, value)
+      os.execute("/sbin/deletetunnel.sh >> /tmp/deleteTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "Tunnel client stopped."
+   end
+
+else
+
+   tunnelStart=tunnelForm:field(Button, "6rdtunnelstart", "Enable")
+   tunnelStart.inputstyle = startStyle
+   tunnelStart.statusString = "DOWN"
+   tunnelStart.forcedtitle = "Tunnel"
+   tunnelStart.template = "6rd/button"
+   function tunnelStart.write(self, value)
+      os.execute("/etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "6RD Tunnel client started."
+   end
+
+end
+
+return tunnelForm
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,349 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+local function getStaticWANip4addr()                                                                   
+	form = luci.util.exec([[echo $(uci -c /tmp/ get tunnel.static.WANip4addr)]])
+	if form ~= nil then                                                                                                                         
+                --form = string.match(form, "%d+\.%d+\.%d+\.%d+");                                                                                 
+        	return form                                                                                                                                     
+        end                                                                                                                                                      
+	return form;                                                                                                                                             
+end
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_6rdipv4masklength]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end 
+
+local function getIPv46rdBr() 
+   form = luci.util.exec([[cat /tmp/new_6rdbr]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefixLength()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "(.*)(::/)(%d+)", "%3")
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefix()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "::/%d+", "")
+	    return form
+   end
+   return nil;
+end
+
+local function getTunnelStatus()
+	local i6RDBr = getIPv46rdBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr)
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "WANip4addr" then 
+		luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "SubnetMaskLength" then 
+		luci.http.write(getSubnetMaskLength().."\n");			
+		end
+		if varData == "IPv46rdBr" then 
+		luci.http.write(getIPv46rdBr().."\n");			
+		end
+		if varData == "6rdPrefixLength" then 
+		luci.http.write(get6rdPrefixLength().."\n");			
+		end
+		if varData == "6rdPrefix" then 
+		luci.http.write(get6rdPrefix().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+		local currentTunnelMode = getTunnelMode();
+		if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+			local calculated6rdPrefixAjax = "Temp";
+			local calculated6rdPrefix = "Temp";
+
+			local wanIPv4Address = getWANip4addr();
+
+			local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.overridetunnel.IPv4MaskLength");
+			if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+			else 
+				IPv4SubnetMaskLength = getSubnetMaskLength();
+			end
+			local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefixLength");
+			if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+			else 
+				IPv6PrefixLength = get6rdPrefixLength();
+			end
+			local IPv6Prefix = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefix");
+			if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+			else 
+				IPv6Prefix = get6rdPrefix();
+			end
+			if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+				calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+				calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+				calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+			else
+				calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+			end
+			luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+		else
+			luci.http.write(" \n");
+		end
+	end
+else
+	mantun = Map("mantun", "6RD DHCP", "This page allows 6RD tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "2"
+	
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP", "If not done then Before configuring DHCP based 6rd ,please configure wan interface from menu NETWORK->INTERFACE->WAN to the dhcp mode then continue ..");
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	end
+	TunnelMode:depends("TunnelType","2")
+	TunnelMode.onValueChange = "0";
+ 	TunnelMode.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=2"
+	TunnelMode.template = "6rd/lvalue"
+
+---- DHCP Configuration Start Here ---
+
+	d = mantun:section(NamedSection, "overridetunnel", "overridetunnel", "Dynamic Configuration");
+	headerFieldR = d:option(DummyValue, " "," ");
+	headerFieldR.forcedtitle = "6RD Configuration";
+	headerFieldR.styleClass = "cbi-blue-bold-left";
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = d:option(DummyValue, " "," ");
+	headerField.statusString = "DHCP Values";
+	headerField.styleClass = "cbi-blue-bold";
+	headerField.template = "6rd/dvalue"
+	local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")  
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)
+	else
+		tunnelPingTime = 5
+	end 
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = true
+
+
+	local wanIPv4Addr = getWANip4addr();
+	  	ipv4WANAdd = d:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "")
+		ipv4WANAdd.value = "--";
+		ipv4WANAdd.name = "WANip4addr";
+		ipv4WANAdd.rmempty = false;
+		ipv4WANAdd.statusString = wanIPv4Addr;
+	ipv4WANAdd.template = "6rd/dvalue"
+  
+	ipv4MaskLength= d:option(DummyValue, "IPv4MaskLength", "IPv4 Mask Length", "");
+	ipv4MaskLength.value = "";
+	ipv4MaskLength.name = "IPv4MaskLength";
+
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		ipv4MaskLength.statusString = IPv4SubnetMaskLength;
+	else
+		ipv4MaskLength.statusString = "--";
+	end
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 33 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end
+	ipv4MaskLength.template = "6rd/dvalue"
+
+	i6rdBrDhcp = d:option(DummyValue, "i6RDBr", "6RD BR", "");
+	i6rdBrDhcp.value = "";
+	i6rdBrDhcp.template = "6rd/dvalue"
+	i6rdBrDhcp.name = "i6RDBr";
+
+	local IPv46rdBr = getIPv46rdBr();
+	if IPv46rdBr ~= nil and #IPv46rdBr > 7 then
+		i6rdBrDhcp.statusString = IPv46rdBr;
+	else
+		i6rdBrDhcp.statusString = " ";
+	end
+
+
+
+	i6rdPrefixDhcp = d:option(DummyValue, "i6RDPrefix", "6RD Prefix", "");
+	i6rdPrefixDhcp.value = "";
+	i6rdPrefixDhcp.name = "i6RDPrefix";
+	i6rdPrefixDhcp.template = "6rd/dvalue"
+	local IPv6Prefix = get6rdPrefix();
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+		i6rdPrefixDhcp.statusString = IPv6Prefix;
+	else
+		i6rdPrefixDhcp.statusString = "--";
+	end
+
+	i6rdPrefixDhcpLength= d:option(DummyValue, "i6RDPrefixLength", "6RD Prefix Length", "");
+	i6rdPrefixDhcpLength.value = "";
+	i6rdPrefixDhcpLength.name = "i6RDPrefixLength";
+	i6rdPrefixDhcpLength.template = "6rd/dvalue"
+	local IPv6PrefixLength = get6rdPrefixLength();
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+		i6rdPrefixDhcpLength.statusString = IPv6PrefixLength;
+	else
+		i6rdPrefixDhcpLength.statusString = "--";
+	end
+
+ 	function i6rdPrefixDhcpLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 65 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end 
+
+	hupDhcp = d:option(DummyValue,"6RDPrefixCalc","Calculated Prefix", "");
+	hupDhcp.value = "";
+	hupDhcp.template = "6rd/dvalue"
+
+ 
+	hupDhcp.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1";
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+	local wanIPv4Address = getWANip4addr();
+        local tMode  = luci.util.exec([[uci get network.wan.proto]])                                     
+        --if tMode ~= nil and #tMode > 0 and tMode == "static" then                                      
+        if tMode ~= nil and #tMode > 0 then                                                              
+                wanIPv4Address =  getStaticWANip4addr()                                                  
+	end 
+	local IPv4SubnetMaskLength =  getSubnetMaskLength();
+	local IPv6PrefixLength =  get6rdPrefixLength();
+	local IPv6Prefix = get6rdPrefix();
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix);
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??..";
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	local currentTunnelMode = getTunnelMode();
+	if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+		hupDhcp.statusString = calculated6rdPrefix ; 
+	else
+		hupDhcp.statusString = " "; 
+	end
+
+	TunnelStatus = d:option(DummyValue, "tunnelStatus","Tunnel Status");
+--	local tunnel_status = getTunnelStatus()
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true;
+	TunnelStatus.name = "TunnelStatus";
+	TunnelStatus.isButton = true;
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+
+  	mSSOptionRewrite = d:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.");
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+	mSSOptionRewrite.template = "6rd/fvalue"
+
+  	i6RDMTU= d:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+        refreshButton = d:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+
+---- DHCP Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/6rd-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,379 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function tunnelMode()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelMode")
+   return form
+end
+
+
+local function tunnelType()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelType")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelType")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	   return form
+   end
+   return form;
+end
+local function getStaticWANip4addr()
+   form = luci.util.exec([[echo $(ifconfig eth1 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}')]])
+   if form ~= nil then
+	    --form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return form;
+end
+
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_subnet_mask]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6RDBr()
+   local form = luci.http.formvalue("cbid.mantun.static.i6RDBr")
+   if form ~= nil then
+--      form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "i6RDBr")
+--   form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+   return form
+end
+
+local function getTunnelStatus()
+	local i6RDBr = get6RDBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr )
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+
+
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 then
+		if varData == "WANip4addr" then 
+			luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+		local calculated6rdPrefixAjax = "Temp";
+		local calculated6rdPrefix = "Temp";
+
+		--local wanIPv4Address = getWANip4addr();
+		local wanIPv4Address = getStaticWANip4addr();
+
+		local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength");
+		if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		else 
+			--IPv4SubnetMaskLength = getSubnetMaskLength();
+		end
+		local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength");
+		local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+		if (IPv6Prefix.match(IPv6Prefix, "::")) then
+			luci.http.write("Invalid 6RD Prefix.\n")
+		end
+
+		if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+			calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+			calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+			calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+		else
+			calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+		end
+		luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+	end
+else
+	mantun = Map("mantun", "6RD Static", "This page allows 6RD tunnel configuration. ");
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.");
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType";
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	local tType = luci.http.formvalue("cbid.mantun.general.TunnelType")
+	if tType ~= nil and #tType > 0 then
+		TunnelType.setForceDefault = tType
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelType")
+		if form ~= nil and tonumber(form) == 0 then
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		elseif form ~= nil and tonumber(form) == 3 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "DisableTunnel") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		end
+	end	
+
+
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP")
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.value = tunnelMode()
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+		if form ~= nil and tonumber(form) == 1 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "6RD-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1")
+		end
+	end
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";
+	TunnelMode.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=2";
+ 	TunnelMode.template = "6rd/lvalue"
+
+
+---- Static Configuration Start Here ---
+
+	m = mantun:section(NamedSection, "static", "static", "Static Configuration");
+	headerFieldR = m:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "6RD Configuration"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = m:option(DummyValue, " "," ")
+	headerField.statusString = "DHCP Values"
+	headerField.styleClass = "cbi-blue-bold"
+	headerField.template = "6rd/dvalue"
+        local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")                                                            
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)                                     
+	else                                                                                  
+		tunnelPingTime = 5                                                            
+	end                                                                                   
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = false
+
+	local wanIPv4Addr = getWANip4addr();
+  	ipv4WANAdd = m:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "v4 WAN Address.")
+	ipv4WANAdd.value = " ";
+	ipv4WANAdd.name = "WANip4addr"
+	ipv4WANAdd.largedescription = "This ip address provided by ISP will be configured from menu NETWORK->INTERFACE->WAN used for 6rd tunnel setup."
+	local wanIPv4Address = getStaticWANip4addr()
+	local tMode  = luci.util.exec([[uci get network.wan.proto]])
+	if tMode ~= nil and #tMode > 0 and tMode:match("static") then
+--		wanIPv4Address =  getStaticWANip4addr()
+		ipv4WANAdd.value = wanIPv4Address
+	else
+		if (wanIPv4Address ~= nil and #wanIPv4Address > 0) then
+			ipv4WANAdd.statusString = wanIPv4Address
+		else
+			ipv4WANAdd.statusString = " ";
+		end
+	end
+	ipv4WANAdd.template = "6rd/dvalue"
+
+
+  	ipv4MaskLength= m:option(Value, "IPv4MaskLength", "IPv4 Mask Length", "Please enter IPv4 mask length between 0-32.");
+  	ipv4MaskLength.rmempty = false;
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	ipv4MaskLength.largedescription = "This is not related to wan interface ipv4 address subnet mask length(CIDR).This is 6rd specific provided by ISP."
+
+	ipv4MaskLength.template = "6rd/value"
+	ipv4MaskLength.dfault = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength") 
+
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > -1 and v < 33 ) then
+				return v
+			else
+				ipv4MaskLength.message = "Please enter valid subnet mask length.";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	M6rdBr = m:option(Value, "i6RDBr", "6RD BR", "Please enter valid IPv4 address or FQDN. e.g.  8.8.8.8 or comcast.com");
+  	M6rdBr.rmempty = false;
+	M6rdBr.template = "6rd/value"
+	M6rdBr.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDBr") 
+	M6rdBr.largedescription = "This is Border Relay ipv4 address provided by ISP ,the 6rd tunnel remote endpoint."
+
+  	M6rdPrefix = m:option(Value, "i6RDPrefix", "6RD Prefix", "Please enter valid IPv6 prefix without :: at end. e.g.  2001:0:0A01");
+  	M6rdPrefix.rmempty = false;
+	M6rdPrefix.template = "6rd/value"
+	M6rdPrefix.largedescription = "This prefix is provided by ISP for the automatic configuration of ipv6 address over LAN interface and hosts behind the lan."
+	M6rdPrefix.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+
+ 	function M6rdPrefix:validate(value) 
+ 		if (value ~= nil) then
+			if (value.match(value, "::")) then
+				return nil
+			else
+				return value
+			end
+		else
+			return nil
+		end
+	end
+
+
+  	M6rdPrefixLength= m:option(Value, "i6RDPrefixLength", "6RD Prefix Length", "Please enter IPv6 mask length between 1-64.");
+  	M6rdPrefixLength.rmempty = false;
+	M6rdPrefixLength.template = "6rd/value"
+	M6rdPrefixLength.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength") 
+ 	function M6rdPrefixLength:validate(value) 
+ 		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 0 and v < 65 ) then
+				return v
+			else
+		    		return nil
+			end
+		else
+			return nil
+		end
+	end 
+
+        hup = m:option(DummyValue,"6RDPrefixCalc","6RDPrefixCalc");
+
+
+	hup.overwrite = true;
+	hup.name = "6RDPrefixCalc";
+	hup.isButton = true;
+	hup.buttonValue = "6RDPrefixCalc"
+	hup.buttonName = "ajax-6RDPrefixCalc"
+                                                                                                  
+	hup.template = "6rd/dvalue"
+	hup.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0";
+
+
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+
+	local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength")
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+	else 
+		IPv4SubnetMaskLength = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength")
+	end	
+
+	local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength")
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+	else 
+		IPv6PrefixLength = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength")
+	end	
+	
+	local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+	else 
+		IPv6Prefix = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+	end
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix)
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??.."
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	hup.value = calculated6rdPrefix .. " "
+
+	TunnelStatus = m:option(DummyValue, "tunnelStatus","Tunnel Status")
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true
+	TunnelStatus.name = "TunnelStatus"
+	TunnelStatus.isButton = true
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+	TunnelStatus.largedescription = "Whenever your tunnel configuration is correct and you are succesfully connected to the ISP BR relay then the status will be up."
+
+  	mSSOptionRewrite = m:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.")
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.template = "6rd/fvalue"
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+
+  	i6RDMTU= m:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = luci.model.uci.cursor():get("mantun", "static", "i6rdMTU") or "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+        refreshButton = m:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+         
+---- Static Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/disabletunnel.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/disabletunnel.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,31 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+	mantun = Map("mantun", "Disabled tunnel", "This page allows to disable tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "Tunnel Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.setForceDefault = "3"
+	TunnelType.template = "6rd/lttypevalue"
+--[[
+	if luci.http.formvalue("cbid.mantun.general.TunnelType") ~= nil then
+		os.execute("sleep 2 && /etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+	end  
+]]--
+	table.insert(returnForms, mantun)
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/dslite-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/dslite-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,293 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getRemoteip6addrValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_softwire]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getLocalip6addrValue()
+	form = luci.util.exec([[cat /tmp/ip6_address]])
+	if form ~= nil then
+		local len = luci.util.exec([[cat /tmp/ip6_prefixlen]])
+		if len ~= nil and #len > 0 then
+--			return form .. "/" .. len
+		end
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6dnsValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_name_servers]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIp6gatewayValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_defgateway]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getPrefixDelegationValue()
+	form = luci.util.exec([[cat /tmp/ip6_prefix]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6gateValue()
+	form = luci.util.exec([[echo $(ifconfig br-lan | grep "Scope:Global" | grep 'inet6 addr:'| cut -d\s -f2 | awk '{ print $3}')]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar")
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "aftr6addr" then 
+			luci.http.write(getRemoteip6addrValue().."\n");			
+		end
+		if varData == "localip6addr" then 
+			luci.http.write(getLocalip6addrValue() .."\n");			
+		end
+		if varData == "dhcpv6_name_servers" then 
+			luci.http.write(getIpv6dnsValue().."\n");			
+		end
+		if varData == "ip6gateway" then 
+			luci.http.write(getIp6gatewayValue() .."\n");			
+		end
+		if varData == "prefixDelegation" then 
+			luci.http.write(getPrefixDelegationValue().."\n");			
+		end
+		if varData == "ipv6gate" then 
+			luci.http.write(getIpv6gateValue().."\n");			
+		end
+	else
+		luci.http.write(" \n");
+	end
+
+
+else
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+             -- "name of the cfg file", "page title", "description"
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+                	local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static")
+                        luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=0")                                                          
+		end                                                                                                                                                 
+	end
+
+	TunnelMode:depends("TunnelType","0")
+	TunnelMode.onValueChange = "0"
+	TunnelMode.fname = "TunnelMode"
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue"
+
+	overSection = mantun:section(NamedSection, "overridetunnel", "mantun", 
+				   "DS-Lite parameters","IPv6 parameters are specified here.")
+
+	dSLiteCapL = overSection:option(DummyValue, " "," ");
+	dSLiteCapL.forcedtitle = "DS-Lite Configuration";
+	dSLiteCapL.styleClass = "cbi-blue-bold-left";
+	dSLiteCapL.template = "6rd/dvalue"
+
+	dSLiteCapR = overSection:option(DummyValue, " "," ");
+	dSLiteCapR.statusString = "DHCP Values";
+	dSLiteCapR.styleClass = "cbi-blue-bold";
+	dSLiteCapR.isAjaxEnabled = true;
+	dSLiteCapR.reloadValues = true;
+	dSLiteCapR.template = "softwire/dvalue"
+
+	aftr6addr = overSection:option(DummyValue, "Remoteip6addr", "AFTR IPv6 Address")
+	aftr6addr.rmempty = false
+	aftr6addr.template = "6rd/dvalue"
+	aftr6addr.name = "aftr6addr"
+	local remoteip6addr = getRemoteip6addrValue()
+	if remoteip6addr ~= nil and #remoteip6addr > 0 then
+		aftr6addr.statusString = remoteip6addr
+	else
+		aftr6addr.statusString = " "
+	end
+
+	localip6addr = overSection:option(DummyValue, "Localip6addr", "WAN IPv6 Address")
+	localip6addr.rmempty = true
+	localip6addr.template = "6rd/dvalue"
+	localip6addr.name = "localip6addr"
+	local ip6addr = getLocalip6addrValue()
+	if ip6addr ~= nil and #ip6addr > 0 then
+		localip6addr.statusString = ip6addr
+	else
+		localip6addr.statusString = " "
+	end
+
+	dhcpv6_name_servers = overSection:option(Value,"Ipv6dns", "Primary DNS (IPv6)","e.g. 2001::2")
+	dhcpv6_name_servers.rmempty = true
+	dhcpv6_name_servers.template = "6rd/value"
+	dhcpv6_name_servers.statusString = getIpv6dnsValue()
+	dhcpv6_name_servers.name = "dhcpv6_name_servers"
+	dhcpv6_name_servers.largedescription="IPv6 address of DNS server provided by ISP used for FQDN resolution."
+	local dns6addr = getIpv6dnsValue()
+	if dns6addr ~= nil and #dns6addr > 0 then
+		dhcpv6_name_servers.statusString = dns6addr
+	else
+		dhcpv6_name_servers.statusString = " "
+	end
+
+
+
+	ip6gateway = overSection:option(Value, "ip6gateway", "IPv6 WAN default gateway", "e.g. 2001::1")
+	ip6gateway.rmempty = true
+	ip6gateway.template = "6rd/value"
+	ip6gateway.name = "ip6gateway"
+	ip6gateway.largedescription = "IPv6 address of the Default Gateway provided by ISP used to route non-local ipv6 packets."
+	local v6gateway = getIp6gatewayValue()
+	if v6gateway ~= nil and #v6gateway > 0 then
+		ip6gateway.statusString = v6gateway
+	else
+		ip6gateway.statusString = " "
+	end
+
+
+	prefixDelegation = overSection:option(DummyValue, "PrefixDelegation", "IPv6 Prefix Delegation")
+	prefixDelegation.rmempty = false
+	prefixDelegation.template = "6rd/dvalue" 
+	prefixDelegation.name = "prefixDelegation"
+	local v6prefix = getPrefixDelegationValue()
+	if v6prefix ~= nil and #v6prefix > 0 then
+		prefixDelegation.statusString = v6prefix
+	else
+		prefixDelegation.statusString = " "
+	end
+
+
+	ipv6gate = overSection:option(DummyValue, "Ipv6gate", "IPv6 LAN Address")
+	ipv6gate.rmempty = false
+	ipv6gate.template = "6rd/dvalue"
+	ipv6gate.name = "ipv6gate"
+	local v6prefix = getIpv6gateValue()
+	if v6gate ~= nil and #v6gate > 0 then
+		ipv6gate.statusString = v6gate
+	else
+		ipv6gate.statusString = " "
+	end
+
+
+	headerFieldR = overSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+
+  	DFBitState = overSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= overSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.overridetunnel.v4SMTU"
+	v6SMTU.opt="sub"
+
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= overSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.");
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.overridetunnel.v6SMTU"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	v4SMTU.opt="add"
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/dslite-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/model/cbi/dslite-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,162 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1" )
+		end                                                                                                                                                 
+	end
+	                                                                                                                                                         
+	TunnelMode:depends("TunnelType","0")                                                                                                                        
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";                                                                                                                            
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue" 
+      
+	mantunDsLite = Map("mantun", "DS-Lite manual configuration",
+			 "This section defines DS-Lite configuration "..
+			 "running in static (manual) mode. Parameters "..
+			 "will be stored in /etc/config/mantun configuration file.")
+
+	dsStaticSection = mantun:section(NamedSection, "static", "static", 
+					     "DS-Lite parameters","Those parameters define static (manual) configuration of DS-Lite tunnel.")
+	localip6addr  = dsStaticSection:option(Value,"Localip6addr", "B4 WAN IPv6 Address", "e.g. 2001:db8::1/32")
+	localip6addr.rmempty = false
+	localip6addr.template = "6rd/value"
+	localip6addr.largedescription = "IPv6 address for the wan interface provided by ISP for basic ipv6 connectivity."
+
+	remoteip6addr = dsStaticSection:option(Value,"Remoteip6addr", "AFTR IPv6 Address", "e.g. 2001:db8::8")
+	remoteip6addr.rmempty = false
+	remoteip6addr.template = "6rd/value"
+	remoteip6addr.largedescription = "IPv6 address of the ISP's AFTR housed by ISP used for remote tunnel endpoint."
+
+	lanipv6addr   = dsStaticSection:option(Value,"LANip6addr", "B4 LAN IPv6 Address", "e.g. 2003:23::1/64")
+	lanipv6addr.rmempty = false
+	lanipv6addr.largedescription = "Configure ipv6 address with the prefix length of /64 accordingly or specified by ISP from the subnet of delegated prefix in the immidiate below button."
+	lanipv6addr.template = "6rd/value"
+
+	pd            = dsStaticSection:option(Value,"PrefixDelegation", "IPv6 Delegated Prefix", "e.g. 2003:23::/64")
+	pd.rmempty = false
+	pd.largedescription = "Configure ipv6 prefix provided by ISP which is used for configuring this B4 LAN ipv6 address."
+	pd.template = "6rd/value"
+	
+	ip6gw         = dsStaticSection:option(Value,"Ipv6gate", "IPv6 Gateway Address", "IPv6 Nexthop Address")
+	ip6gw.rmempty = false
+	ip6gw.largedescription = "Configure IPv6 address of the gateway provided by ISP for the routing of non-local ipv6 pcakets."
+	ip6gw.template = "6rd/value"
+
+	ip6dns        = dsStaticSection:option(Value,"Ipv6dns", "Primary DNS", "e.g. 2001:db8::9")
+	ip6dns.rmempty = false
+	ip6dns.largedescription = "Configure IPv6 address of DNS server provided by ISP used for FQDN resolution.use space for more than one ip address entry."
+	ip6dns.template = "6rd/value"
+
+	headerFieldR = dsStaticSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+  	DFBitState = dsStaticSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= dsStaticSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.static.v4SMTU"
+	v6SMTU.opt="sub"
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= dsStaticSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.")
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.static.v6SMTU"
+	v4SMTU.opt="add"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/button.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/button.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,25 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: button.htm 3558 2008-10-11 11:40:44Z Cyrus $
+
+-%>
+<%+6rd/full_valueheader%>
+	<% if self:cfgvalue(section) ~= false then %>
+		<% if self.isButton then %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+		<% else %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="submit"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", self.title)%> />
+		<% end %>
+	<% else %>
+		-
+	<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+6rd/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+		<%- if self.statusString and  #self.statusString > 0 then -%>
+			<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+				<%-=self.statusString-%>
+			</label>
+		<%- end -%>
+		<% if self.description and #self.description > 0 then -%>
+			<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+				<br />
+			<%- end %>
+			<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+				<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+				<%=self.description%>
+			</div>
+		<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,155 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=WANip4addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#WANip4addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=tunnelStatus",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#TunnelStatus').html(lines[0]);
+						}
+					});
+					<%- if self.isDhpc then -%>
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=IPv46rdBr",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDBr').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefixLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefixLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefix').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=SubnetMaskLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#IPv4MaskLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=Updated_Prefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$("label#DHCP").html(lines[0]);	
+							}
+						});
+					<%- end -%>
+				}
+			<%- end -%>
+			$('#ajax-6RDPrefixCalc').click(function() {
+				var inputStr = '';
+				jQuery.each($('form'),function() {
+					jQuery.each($(this).find('input'),function() {
+						if( $(this).attr("name") ){
+							if($(this).attr("type") != "submit"){
+								if( $(this).attr("type") != "button" ){
+									inputStr = inputStr + "&#38;" + $(this).attr("name") + '=' + $(this).val();
+								}
+							}
+						}
+					});
+				});
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + inputStr,
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#6RDPrefixCalc").html(lines[0]);	
+					}
+				});
+			});
+			$('#ajax-reconnect').click(function() {
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=reconnect6rdtunnel",
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#TunnelStatus").html(lines[0]);	
+					}
+				});
+			});
+			$('#refresh').click(function() {
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			});
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/fvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/fvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,17 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: fvalue.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input class="cbi-input-checkbox" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="checkbox"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self:cfgvalue(section) == self.enabled, "checked", "checked") %> value="1" />
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/lttypevalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/lttypevalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,54 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect) {
+			if(objSelect.value == '0') {
+				window.location.href = "<%=controller%>/admin/softwire/DS-Lite-Static?" + "cbid.mantun.general.TunnelType=0"
+			} else if(objSelect.value == '1') {
+				window.location.href = "<%=controller%>/admin/softwire/Softwire-Static?" + "cbid.mantun.general.TunnelType=1"
+			} else if(objSelect.value == '2') {
+				window.location.href = "<%=controller%>/admin/6rd/6RD-Static?" + "cbid.mantun.general.TunnelType=2"
+			} else if(objSelect.value == '3') {
+				window.location.href = "<%=controller%>/admin/6rd/DisableTunnel?" + "cbid.mantun.general.TunnelType=3"
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/lvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/lvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect){
+			if(objSelect.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,6 @@
+<%+header%>
+<h2>Tunneling Configuration</h2>
+
+<p>This section of the Web GUI is dedicated to 6RD/DS-Lite tunnel configuration:
+</p>
+<%+footer%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/value.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/6rd/value.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: value.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input type="<%=self.password and 'password" class="cbi-input-password' or 'text" class="cbi-input-text' %>" <% if self.onlostfocus and self.opt then -%> onblur="javsacript:checkSMTU(this, '<%=self.onlostfocus%>' , '<%=self.opt or "none" %>');" <% end -%>   onchange="cbi_d_update(this.id);moveto();"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", (self.forcedvalue or self:cfgvalue(section) or self.default )) .. ifattr(self.size, "size")%> />
+	<% if #self.keylist > 0 then -%>
+	<script type="text/javascript">
+		cbi_combobox_init('<%=cbid%>', {
+		<%-
+			for i, k in ipairs(self.keylist) do
+		-%>
+			<%-=string.format("%q", k) .. ":" .. string.format("%q", self.vallist[i])-%>
+			<%-if i<#self.keylist then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+		}, '<%- if not self.rmempty and not self.optional then -%>
+			<%-:cbi_select-%>
+		<%- end -%>', '
+		<%- if self.combobox_manual then -%>
+			<%-=self.combobox_manual-%>
+		<%- else -%>
+			<%-:cbi_manual-%>
+		<%- end -%>');
+	</script>
+	<% end -%>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		moveto (){
+			if(this.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<% end -%>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+softwire/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+softwire/full_valuefooter%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+	<%- if self.statusString and  #self.statusString > 0 then -%>
+		<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+			<%-=self.statusString-%>
+		</label>
+	<%- end -%>
+	<% if self.description and #self.description > 0 then -%>
+		<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+			<br />
+		<%- end %>
+		<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+			<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+			<%=self.description%>
+		</div>
+	<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,110 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=aftr6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#aftr6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=localip6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#localip6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=dhcpv6_name_servers",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#dhcpv6_name_servers').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ip6gateway",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#ip6gateway').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=prefixDelegation",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#prefixDelegation").html(lines[0]);	
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ipv6gate",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#ipv6gate").html(lines[0]);	
+						}
+					});
+				}
+			<%- end -%>
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/luasrc/view/softwire/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,12 @@
+<%+header%>
+<h2>Softwire configuration</h2>
+
+<p>This section of the Web GUI is dedicated to tunnel configuration:
+Softwire (IPv6 over IPv4) or <abbr title="Dual-Stack
+Lite">DS-Lite</abbr> (IPv4 over IPv6). Related topics - 
+fragmentation, <abbr title="Maximum Transmission Unit">MTU</abbr>, 
+services and tunnel status, portproxy (a tool used for automatic port
+configuration, using NAT-PMP and UPnP) and manual port forwarding
+configuration are also available.</p>
+
+<%+footer%>
Index: luci-0.10+svn6791/applications/luci-ipv6tunnel/Makefile
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/applications/luci-ipv6tunnel/Makefile	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,2 @@
+include ../../build/config.mk
+include ../../build/module.mk
\ No newline at end of file
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/CONTROL/control
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/CONTROL/control	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,13 @@
+Package: luci-app-ipv6tunnel
+Version: 0.10+svn6791-1
+Depends: luci-mod-admin-core, ipv6tunnel
+Provides: 
+Source: feeds_src/luci-trunk/luci
+Section: luci
+Status: unknown ok not-installed
+Essential: no
+Priority: optional
+Maintainer: LuCI Development Team <luci@lists.subsignal.org>
+Architecture: ubicom32
+Installed-Size: 14592
+Description:  ipv6 tunnelling configuration module
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/controller/6rd/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/controller/6rd/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+module("luci.controller.6rd.portproxy", package.seeall)
+
+function index()
+        
+    local page = entry({"admin","6rd"}, template("6rd/overview"), "Tunneling", 90)
+    page.dependent=false
+
+    local page = entry({"admin", "6rd", "6RD-DHCP"}, cbi("6rd-dhcp"), "6RD-DHCP", 10)
+    page.dependent=false
+    page.hidden  = true -- In Order to hide from submenu list
+    page.index  = false
+
+--    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "6RD-Static", 20)
+    local page = entry({"admin", "6rd", "6RD-Static"}, cbi("6rd-static"), "Tunnel configuration", 20)
+    page.dependent=false
+    page.hidden  = false
+
+    local page = entry({"admin", "6rd", "DisableTunnel"}, cbi("disabletunnel"), "Disable Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+    local page = entry({"admin", "6rd", "advanced-tunnel-settings"}, cbi("6rd-advance"), "Advanced Tunnel Settings", 30)
+    page.dependent=false
+   
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
+
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/controller/softwire/portproxy.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/controller/softwire/portproxy.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,51 @@
+module("luci.controller.softwire.portproxy", package.seeall)
+
+function index()
+
+    local page = entry({"admin","softwire"}, template("softwire/overview"), "Softwire", 80)
+    page.dependent=false
+    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel"}, cbi("softwire-tunnel"), "Tunnel configuration", 10)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-frag"}, cbi("softwire-misc"), "Tunnel Fragmentation", 15)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "tunnel-adv"}, cbi("softwire-adv"), "Advanced Settings and status", 20)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd"}, cbi("softwire-portfwd"), "Manual Port Forwarding", 30)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portfwd-limits"}, cbi("softwire-portfwd-limits"), "Manual Port Forwarding Limits", 40)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy-perm"}, cbi("softwire-portproxy-perm"), "Portproxy - permanent configuration", 50)
+--    page.dependent=false
+--    page.hidden  = true
+
+--    local page = entry({"admin", "6rd", "portproxy"}, cbi("softwire-portproxy"), "Portproxy - temporary configuration", 60)
+--    page.dependent=false
+--    page.hidden  = true
+        
+    local page = entry({"admin", "softwire", "DS-Lite-Static"}, cbi("dslite-static"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = false
+    
+    local page = entry({"admin", "softwire", "DS-Lite-DHCP"}, cbi("dslite-dhcp"), "DS-Lite Tunnel", 20)
+    page.dependent=false
+    page.hidden  = true
+
+end
+     
+function action_test1()
+     luci.http.prepare_content("text/plain")
+     luci.http.write("Portproxy configuration.")
+end
+
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-advance.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-advance.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,193 @@
+require "luci.ip"
+
+local returnForms = {}
+-- button styles
+local stopStyle="reset"
+local startStyle="reload"
+local enableStyle="apply"
+local disableStyle="remove"
+
+-- returns if specifid process is running or not
+function started(process)
+   if pid(process) then
+      return true
+   else
+      return false
+   end
+end
+
+-- returns if specified service is enabled or not
+function enabled(service)
+   return luci.sys.init.enabled(service)
+end
+
+-- returns PID of specified service
+function pid(process)
+   processes = luci.sys.process.list() -- get list of processes
+   -- processes is a table of tables
+   -- each entry specifies sigle process
+   -- each process is described with list of parameters
+   
+   for pid,procinfo in pairs(processes) do
+      if (string.find(procinfo["COMMAND"], process)) then
+	 return pid
+      end
+   end
+   return nil
+end
+
+-- returns description if service is started/stopped, enabled/disabled
+function status(service,process)
+   local s
+   if enabled(service) then
+      s = "enabled, "
+   else
+      s = "disabled, "
+   end
+   
+   if pid(process) then
+      s = s.."started"
+   else
+      s = s.."stopped"
+   end 
+
+   return s
+end
+-- Template Code ------------
+tunnelForm = SimpleForm("dhcp", "Advanced Tunnel Settings.", 
+		      "This section provides control for tunnel.")
+tunnelForm.reset = false  -- don't display reset button below this form
+tunnelForm.submit = false -- don't display reset button below this form
+
+
+tunnelForm:field(DummyValue, " "," ").statusString = "Current Status";
+--======================== DHCP STATUS AND CONTROLS ===========================--
+if (started("dhclient")) then
+   dhcpStop=tunnelForm:field(Button, "dhcpstop", "STOP")
+   dhcpStop.inputstyle = stopStyle
+   dhcpStop.statusString = "Running"
+   dhcpStop.forcedtitle = "DHCP Client"
+   dhcpStop.template = "6rd/button"
+   function dhcpStop.write(self, value)
+      os.execute("/etc/init.d/dhclient stop >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client stopped."
+   end
+
+else
+
+   dhcpStart=tunnelForm:field(Button, "dhcpstart", "START")
+   dhcpStart.inputstyle = startStyle
+   dhcpStart.statusString = "Stopped"
+   dhcpStart.forcedtitle = "DHCP Client"
+   dhcpStart.template = "6rd/button"
+   function dhcpStart.write(self, value)
+      os.execute("/etc/init.d/dhclient start >> /tmp/dhclient.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DHCP client started."
+   end
+
+end
+
+
+--======================== RADVD STATUS AND CONTROLS ===========================--
+if (started("radvd")) then
+   radvdStop=tunnelForm:field(Button, "radvdstop", "STOP")
+   radvdStop.inputstyle = stopStyle
+   radvdStop.statusString = "Running"
+   radvdStop.forcedtitle = "RADVD"
+   radvdStop.template = "6rd/button"
+   function radvdStop.write(self, value)
+      os.execute("crontab /etc/config/emptycrontab &")
+      os.execute("/etc/init.d/radvd stop &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client stopped."
+   end
+
+else
+
+   radvdStart=tunnelForm:field(Button, "radvdstart", "Start")
+   radvdStart.inputstyle = startStyle
+   radvdStart.statusString = "Stopped"
+   radvdStart.forcedtitle = "RADVD"
+   radvdStart.template = "6rd/button"
+   function radvdStart.write(self, value)
+      os.execute("crontab /etc/config/radvdcrontab &")
+      os.execute("/sbin/forceStartRadvd.sh  &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "RADVD client started."
+   end
+
+end
+
+
+
+--======================== DNS Masq STATUS AND CONTROLS ===========================--
+local dnsMasqStatus = luci.util.exec([[ps -a | grep 'dnsmasq' | wc -l]]);
+if (started("dnsmasq")) then
+   dnsStop=tunnelForm:field(Button, "dnsstop", "Stop")
+   dnsStop.inputstyle = stopStyle
+   dnsStop.statusString = "Running"
+   dnsStop.forcedtitle = "DNS Masq"
+   dnsStop.template = "6rd/button"
+   function dnsStop.write(self, value)
+      os.execute("killall dnsmasq >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "DNS Masq client stopped."
+   end
+
+else
+
+   dnsStart=tunnelForm:field(Button, "dnsstart", "Start")
+   dnsStart.inputstyle = startStyle
+   dnsStart.statusString = "Stopped"
+   dnsStart.forcedtitle = "DNS Masq"
+   dnsStart.template = "6rd/button"
+   function dnsStart.write(self, value)
+      os.execute("/etc/init.d/dnsmasq start >> /tmp/deleteAlldnsmasq.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+     tunnelForm.message = "DNS Masq client started."
+   end
+
+end
+
+
+
+--======================== Tunnel STATUS AND CONTROLS ===========================--
+local tunnelStatus = luci.util.exec([[ifconfig | grep 'sit1' | wc -l]]);
+if (tonumber(tunnelStatus) > 0) then
+   tunnelStop=tunnelForm:field(Button, "6rdtunnelstop", "Disable")
+   tunnelStop.inputstyle = stopStyle
+   tunnelStop.statusString = "UP"
+   tunnelStop.forcedtitle = "Tunnel"
+   tunnelStop.template = "6rd/button"
+   function tunnelStop.write(self, value)
+      os.execute("/sbin/deletetunnel.sh >> /tmp/deleteTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "Tunnel client stopped."
+   end
+
+else
+
+   tunnelStart=tunnelForm:field(Button, "6rdtunnelstart", "Enable")
+   tunnelStart.inputstyle = startStyle
+   tunnelStart.statusString = "DOWN"
+   tunnelStart.forcedtitle = "Tunnel"
+   tunnelStart.template = "6rd/button"
+   function tunnelStart.write(self, value)
+      os.execute("/etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+      luci.http.header("refresh","5") -- refesh this page every 5 seconds
+      tunnelForm.errmessage = "This page will reload in 5 seconds."
+      tunnelForm.message = "6RD Tunnel client started."
+   end
+
+end
+
+return tunnelForm
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,349 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+local function getStaticWANip4addr()                                                                   
+	form = luci.util.exec([[echo $(uci -c /tmp/ get tunnel.static.WANip4addr)]])
+	if form ~= nil then                                                                                                                         
+                --form = string.match(form, "%d+\.%d+\.%d+\.%d+");                                                                                 
+        	return form                                                                                                                                     
+        end                                                                                                                                                      
+	return form;                                                                                                                                             
+end
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_6rdipv4masklength]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end 
+
+local function getIPv46rdBr() 
+   form = luci.util.exec([[cat /tmp/new_6rdbr]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefixLength()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "(.*)(::/)(%d+)", "%3")
+	    return form
+   end
+   return nil;
+end
+
+local function get6rdPrefix()
+   form = luci.util.exec([[cat /tmp/new_6rdprefix]])
+   if form ~= nil then
+	    form = string.gsub(form, "::/%d+", "")
+	    return form
+   end
+   return nil;
+end
+
+local function getTunnelStatus()
+	local i6RDBr = getIPv46rdBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr)
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "WANip4addr" then 
+		luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "SubnetMaskLength" then 
+		luci.http.write(getSubnetMaskLength().."\n");			
+		end
+		if varData == "IPv46rdBr" then 
+		luci.http.write(getIPv46rdBr().."\n");			
+		end
+		if varData == "6rdPrefixLength" then 
+		luci.http.write(get6rdPrefixLength().."\n");			
+		end
+		if varData == "6rdPrefix" then 
+		luci.http.write(get6rdPrefix().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+		local currentTunnelMode = getTunnelMode();
+		if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+			local calculated6rdPrefixAjax = "Temp";
+			local calculated6rdPrefix = "Temp";
+
+			local wanIPv4Address = getWANip4addr();
+
+			local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.overridetunnel.IPv4MaskLength");
+			if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+			else 
+				IPv4SubnetMaskLength = getSubnetMaskLength();
+			end
+			local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefixLength");
+			if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+			else 
+				IPv6PrefixLength = get6rdPrefixLength();
+			end
+			local IPv6Prefix = luci.http.formvalue("cbid.mantun.overridetunnel.i6RDPrefix");
+			if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+			else 
+				IPv6Prefix = get6rdPrefix();
+			end
+			if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+				calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+				calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+				calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+			else
+				calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+			end
+			luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+		else
+			luci.http.write(" \n");
+		end
+	end
+else
+	mantun = Map("mantun", "6RD DHCP", "This page allows 6RD tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "2"
+	
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP", "If not done then Before configuring DHCP based 6rd ,please configure wan interface from menu NETWORK->INTERFACE->WAN to the dhcp mode then continue ..");
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	end
+	TunnelMode:depends("TunnelType","2")
+	TunnelMode.onValueChange = "0";
+ 	TunnelMode.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=2"
+	TunnelMode.template = "6rd/lvalue"
+
+---- DHCP Configuration Start Here ---
+
+	d = mantun:section(NamedSection, "overridetunnel", "overridetunnel", "Dynamic Configuration");
+	headerFieldR = d:option(DummyValue, " "," ");
+	headerFieldR.forcedtitle = "6RD Configuration";
+	headerFieldR.styleClass = "cbi-blue-bold-left";
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = d:option(DummyValue, " "," ");
+	headerField.statusString = "DHCP Values";
+	headerField.styleClass = "cbi-blue-bold";
+	headerField.template = "6rd/dvalue"
+	local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")  
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)
+	else
+		tunnelPingTime = 5
+	end 
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = true
+
+
+	local wanIPv4Addr = getWANip4addr();
+	  	ipv4WANAdd = d:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "")
+		ipv4WANAdd.value = "--";
+		ipv4WANAdd.name = "WANip4addr";
+		ipv4WANAdd.rmempty = false;
+		ipv4WANAdd.statusString = wanIPv4Addr;
+	ipv4WANAdd.template = "6rd/dvalue"
+  
+	ipv4MaskLength= d:option(DummyValue, "IPv4MaskLength", "IPv4 Mask Length", "");
+	ipv4MaskLength.value = "";
+	ipv4MaskLength.name = "IPv4MaskLength";
+
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		ipv4MaskLength.statusString = IPv4SubnetMaskLength;
+	else
+		ipv4MaskLength.statusString = "--";
+	end
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 33 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end
+	ipv4MaskLength.template = "6rd/dvalue"
+
+	i6rdBrDhcp = d:option(DummyValue, "i6RDBr", "6RD BR", "");
+	i6rdBrDhcp.value = "";
+	i6rdBrDhcp.template = "6rd/dvalue"
+	i6rdBrDhcp.name = "i6RDBr";
+
+	local IPv46rdBr = getIPv46rdBr();
+	if IPv46rdBr ~= nil and #IPv46rdBr > 7 then
+		i6rdBrDhcp.statusString = IPv46rdBr;
+	else
+		i6rdBrDhcp.statusString = " ";
+	end
+
+
+
+	i6rdPrefixDhcp = d:option(DummyValue, "i6RDPrefix", "6RD Prefix", "");
+	i6rdPrefixDhcp.value = "";
+	i6rdPrefixDhcp.name = "i6RDPrefix";
+	i6rdPrefixDhcp.template = "6rd/dvalue"
+	local IPv6Prefix = get6rdPrefix();
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+		i6rdPrefixDhcp.statusString = IPv6Prefix;
+	else
+		i6rdPrefixDhcp.statusString = "--";
+	end
+
+	i6rdPrefixDhcpLength= d:option(DummyValue, "i6RDPrefixLength", "6RD Prefix Length", "");
+	i6rdPrefixDhcpLength.value = "";
+	i6rdPrefixDhcpLength.name = "i6RDPrefixLength";
+	i6rdPrefixDhcpLength.template = "6rd/dvalue"
+	local IPv6PrefixLength = get6rdPrefixLength();
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+		i6rdPrefixDhcpLength.statusString = IPv6PrefixLength;
+	else
+		i6rdPrefixDhcpLength.statusString = "--";
+	end
+
+ 	function i6rdPrefixDhcpLength:validate(value) 
+		local v = tonumber(value)
+		if (v > 0 and v < 65 ) then
+			return v
+		else
+	    		return nil
+		end 
+	end 
+
+	hupDhcp = d:option(DummyValue,"6RDPrefixCalc","Calculated Prefix", "");
+	hupDhcp.value = "";
+	hupDhcp.template = "6rd/dvalue"
+
+ 
+	hupDhcp.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1";
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+	local wanIPv4Address = getWANip4addr();
+        local tMode  = luci.util.exec([[uci get network.wan.proto]])                                     
+        --if tMode ~= nil and #tMode > 0 and tMode == "static" then                                      
+        if tMode ~= nil and #tMode > 0 then                                                              
+                wanIPv4Address =  getStaticWANip4addr()                                                  
+	end 
+	local IPv4SubnetMaskLength =  getSubnetMaskLength();
+	local IPv6PrefixLength =  get6rdPrefixLength();
+	local IPv6Prefix = get6rdPrefix();
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix);
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??..";
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	local currentTunnelMode = getTunnelMode();
+	if currentTunnelMode ~= nil and #currentTunnelMode > 0 and currentTunnelMode == "1" then
+		hupDhcp.statusString = calculated6rdPrefix ; 
+	else
+		hupDhcp.statusString = " "; 
+	end
+
+	TunnelStatus = d:option(DummyValue, "tunnelStatus","Tunnel Status");
+--	local tunnel_status = getTunnelStatus()
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true;
+	TunnelStatus.name = "TunnelStatus";
+	TunnelStatus.isButton = true;
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+
+  	mSSOptionRewrite = d:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.");
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+	mSSOptionRewrite.template = "6rd/fvalue"
+
+  	i6RDMTU= d:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+        refreshButton = d:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+
+---- DHCP Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/6rd-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,379 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function tunnelMode()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelMode")
+   return form
+end
+
+
+local function tunnelType()
+   local form = luci.http.formvalue("cbid.mantun.static.TunnelType")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "TunnelType")
+   return form
+end
+
+local function getWANip4addr()
+   form = luci.util.exec([[cat /tmp/new_ip_address]])
+   if form ~= nil then
+	    form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	   return form
+   end
+   return form;
+end
+local function getStaticWANip4addr()
+   form = luci.util.exec([[echo $(ifconfig eth1 | grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}')]])
+   if form ~= nil then
+	    --form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+	    return form
+   end
+   return form;
+end
+
+local function getSubnetMaskLength() 
+   form = luci.util.exec([[cat /tmp/new_subnet_mask]])
+   if form ~= nil then
+	    form = string.match(form, "%d+");
+	    return form
+   end
+   return nil;
+end
+
+local function get6RDBr()
+   local form = luci.http.formvalue("cbid.mantun.static.i6RDBr")
+   if form ~= nil then
+--      form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "static", "i6RDBr")
+--   form = string.match(form, "%d+\.%d+\.%d+\.%d+");
+   return form
+end
+
+local function getTunnelStatus()
+	local i6RDBr = get6RDBr();
+	if i6RDBr ~= nil and #i6RDBr > 0 then
+		local status = luci.util.exec("/sbin/tunnelstatus.sh " .. i6RDBr )
+		if status ~= nil and #status > 0 then
+			return status
+		else
+			return "Under proccess"
+		end 
+	else
+		return "DOWN"
+	end
+end
+
+
+
+
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar");
+	if varData ~= nil and #varData > 1 then
+		if varData == "WANip4addr" then 
+			luci.http.write(getWANip4addr().."\n");			
+		end
+		if varData == "tunnelStatus" then 
+			luci.http.write(getTunnelStatus().."\n");			
+		end
+		if varData == "reconnect6rdtunnel" then 
+			os.execute("/sbin/reconnect6rdtunnel.sh >> /tmp/reconnectTunnel.log 2<&1 &");
+			luci.http.write("Reconnect in progress..".."\n");			
+		end
+	else
+--==================== Calculate 6RD Prefix for Ajax Request ========================--
+		local calculated6rdPrefixAjax = "Temp";
+		local calculated6rdPrefix = "Temp";
+
+		--local wanIPv4Address = getWANip4addr();
+		local wanIPv4Address = getStaticWANip4addr();
+
+		local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength");
+		if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+		else 
+			--IPv4SubnetMaskLength = getSubnetMaskLength();
+		end
+		local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength");
+		local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+		if (IPv6Prefix.match(IPv6Prefix, "::")) then
+			luci.http.write("Invalid 6RD Prefix.\n")
+		end
+
+		if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+			calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+			calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+			calculated6rdPrefixAjax = luci.util.exec(calculated6rdPrefix);
+		else
+			calculated6rdPrefixAjax = "Some mandatory parameters are missing??..";
+		end
+		luci.http.write(calculated6rdPrefixAjax);
+--==================== End 6RD Prefix Calculation ========================--
+	end
+else
+	mantun = Map("mantun", "6RD Static", "This page allows 6RD tunnel configuration. ");
+	general = mantun:section(NamedSection, "general", "general", "6RD Configuration")
+
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.");
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType";
+	TunnelType.onValueChange = "0"
+ 	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.template = "6rd/lttypevalue"
+	local tType = luci.http.formvalue("cbid.mantun.general.TunnelType")
+	if tType ~= nil and #tType > 0 then
+		TunnelType.setForceDefault = tType
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelType")
+		if form ~= nil and tonumber(form) == 0 then
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		elseif form ~= nil and tonumber(form) == 3 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "DisableTunnel") .. "?cbid.mantun.general.TunnelType=" .. tonumber(form)
+			luci.http.redirect( request_uri)
+		end
+	end	
+
+
+	TunnelMode = general:option(ListValue,"TunnelMode", "Static or DHCP")
+	TunnelMode:value("0","Static")
+	TunnelMode:value("1","DHCP")
+	TunnelMode.value = tunnelMode()
+	TunnelMode.rmempty = false 
+	local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+	if tMode ~= nil and #tMode > 0 then
+		TunnelMode.setForceDefault = tMode
+	else
+		local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+		if form ~= nil and tonumber(form) == 1 then
+			local request_uri = luci.dispatcher.build_url("admin", "6rd", "6RD-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1")
+		end
+	end
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";
+	TunnelMode.moveTo = "/admin/6rd/6RD-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=2";
+ 	TunnelMode.template = "6rd/lvalue"
+
+
+---- Static Configuration Start Here ---
+
+	m = mantun:section(NamedSection, "static", "static", "Static Configuration");
+	headerFieldR = m:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "6RD Configuration"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+	headerField = m:option(DummyValue, " "," ")
+	headerField.statusString = "DHCP Values"
+	headerField.styleClass = "cbi-blue-bold"
+	headerField.template = "6rd/dvalue"
+        local tunnelPingTime = luci.model.uci.cursor():get("mantun", "static", "PingTime")                                                            
+	if tunnelPingTime ~= nil and #tunnelPingTime > 0 and tonumber(tunnelPingTime) > 0 then
+		tunnelPingTime = tonumber(tunnelPingTime)                                     
+	else                                                                                  
+		tunnelPingTime = 5                                                            
+	end                                                                                   
+	headerField.tunnelPingTime = tunnelPingTime * 1000 
+	headerField.reloadValues = true
+	headerField.isAjaxEnabled = true
+	headerField.isDhpc = false
+
+	local wanIPv4Addr = getWANip4addr();
+  	ipv4WANAdd = m:option(DummyValue, "WANip4addr", "IPv4 WAN Address", "v4 WAN Address.")
+	ipv4WANAdd.value = " ";
+	ipv4WANAdd.name = "WANip4addr"
+	ipv4WANAdd.largedescription = "This ip address provided by ISP will be configured from menu NETWORK->INTERFACE->WAN used for 6rd tunnel setup."
+	local wanIPv4Address = getStaticWANip4addr()
+	local tMode  = luci.util.exec([[uci get network.wan.proto]])
+	if tMode ~= nil and #tMode > 0 and tMode:match("static") then
+--		wanIPv4Address =  getStaticWANip4addr()
+		ipv4WANAdd.value = wanIPv4Address
+	else
+		if (wanIPv4Address ~= nil and #wanIPv4Address > 0) then
+			ipv4WANAdd.statusString = wanIPv4Address
+		else
+			ipv4WANAdd.statusString = " ";
+		end
+	end
+	ipv4WANAdd.template = "6rd/dvalue"
+
+
+  	ipv4MaskLength= m:option(Value, "IPv4MaskLength", "IPv4 Mask Length", "Please enter IPv4 mask length between 0-32.");
+  	ipv4MaskLength.rmempty = false;
+	local IPv4SubnetMaskLength = getSubnetMaskLength();
+	ipv4MaskLength.largedescription = "This is not related to wan interface ipv4 address subnet mask length(CIDR).This is 6rd specific provided by ISP."
+
+	ipv4MaskLength.template = "6rd/value"
+	ipv4MaskLength.dfault = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength") 
+
+	function ipv4MaskLength:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > -1 and v < 33 ) then
+				return v
+			else
+				ipv4MaskLength.message = "Please enter valid subnet mask length.";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	M6rdBr = m:option(Value, "i6RDBr", "6RD BR", "Please enter valid IPv4 address or FQDN. e.g.  8.8.8.8 or comcast.com");
+  	M6rdBr.rmempty = false;
+	M6rdBr.template = "6rd/value"
+	M6rdBr.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDBr") 
+	M6rdBr.largedescription = "This is Border Relay ipv4 address provided by ISP ,the 6rd tunnel remote endpoint."
+
+  	M6rdPrefix = m:option(Value, "i6RDPrefix", "6RD Prefix", "Please enter valid IPv6 prefix without :: at end. e.g.  2001:0:0A01");
+  	M6rdPrefix.rmempty = false;
+	M6rdPrefix.template = "6rd/value"
+	M6rdPrefix.largedescription = "This prefix is provided by ISP for the automatic configuration of ipv6 address over LAN interface and hosts behind the lan."
+	M6rdPrefix.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+
+ 	function M6rdPrefix:validate(value) 
+ 		if (value ~= nil) then
+			if (value.match(value, "::")) then
+				return nil
+			else
+				return value
+			end
+		else
+			return nil
+		end
+	end
+
+
+  	M6rdPrefixLength= m:option(Value, "i6RDPrefixLength", "6RD Prefix Length", "Please enter IPv6 mask length between 1-64.");
+  	M6rdPrefixLength.rmempty = false;
+	M6rdPrefixLength.template = "6rd/value"
+	M6rdPrefixLength.dfault = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength") 
+ 	function M6rdPrefixLength:validate(value) 
+ 		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 0 and v < 65 ) then
+				return v
+			else
+		    		return nil
+			end
+		else
+			return nil
+		end
+	end 
+
+        hup = m:option(DummyValue,"6RDPrefixCalc","6RDPrefixCalc");
+
+
+	hup.overwrite = true;
+	hup.name = "6RDPrefixCalc";
+	hup.isButton = true;
+	hup.buttonValue = "6RDPrefixCalc"
+	hup.buttonName = "ajax-6RDPrefixCalc"
+                                                                                                  
+	hup.template = "6rd/dvalue"
+	hup.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelMode=0";
+
+
+--==================== Calculate 6RD Prefix ========================--
+	local calculated6rdPrefix = " ";
+
+	local IPv4SubnetMaskLength = luci.http.formvalue("cbid.mantun.static.IPv4MaskLength")
+	if IPv4SubnetMaskLength ~= nil and #IPv4SubnetMaskLength > 0 then
+	else 
+		IPv4SubnetMaskLength = luci.model.uci.cursor():get("mantun", "static", "IPv4MaskLength")
+	end	
+
+	local IPv6PrefixLength = luci.http.formvalue("cbid.mantun.static.i6RDPrefixLength")
+	if IPv6PrefixLength ~= nil and #IPv6PrefixLength > 0 then
+	else 
+		IPv6PrefixLength = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefixLength")
+	end	
+	
+	local IPv6Prefix = luci.http.formvalue("cbid.mantun.static.i6RDPrefix");
+	if IPv6Prefix ~= nil and #IPv6Prefix > 0 then
+	else 
+		IPv6Prefix = luci.model.uci.cursor():get("mantun", "static", "i6RDPrefix")
+	end
+
+	if wanIPv4Address and IPv6PrefixLength and IPv6Prefix and IPv4SubnetMaskLength then
+		calculated6rdPrefix = "/sbin/i6rdcalc " .. IPv6Prefix  .. "::/" .. IPv6PrefixLength .. " " .. wanIPv4Address .. " " .. IPv4SubnetMaskLength;
+		calculated6rdPrefix = string.gsub(calculated6rdPrefix, "(\n)", "")
+		calculated6rdPrefix = luci.util.exec(calculated6rdPrefix)
+	else
+		calculated6rdPrefix = "Some mandatory parameters are missing??.."
+	end
+
+
+--==================== End 6RD Prefix Calculation ========================--
+	hup.value = calculated6rdPrefix .. " "
+
+	TunnelStatus = m:option(DummyValue, "tunnelStatus","Tunnel Status")
+
+	TunnelStatus.template = "6rd/dvalue"
+	TunnelStatus.value = "Status will update shortly."
+	TunnelStatus.overwrite = true
+	TunnelStatus.name = "TunnelStatus"
+	TunnelStatus.isButton = true
+	TunnelStatus.buttonValue = "Reconnect"
+	TunnelStatus.buttonName = "ajax-reconnect"
+	TunnelStatus.largedescription = "Whenever your tunnel configuration is correct and you are succesfully connected to the ISP BR relay then the status will be up."
+
+  	mSSOptionRewrite = m:option(Flag, "MSSOptionRewrite", "MSS Option Rewrite", "Enable/Disable TCP MSS.")
+  	mSSOptionRewrite.rmempty = false;
+	mSSOptionRewrite.template = "6rd/fvalue"
+	mSSOptionRewrite.largedescription = "TCP MSS allows to set the maximum window size for the TCP connection which can help you to prevent fragmentation and unordered packet recieving."
+
+  	i6RDMTU= m:option(Value, "i6rdMTU", "6RD MTU", "Please enter MTU length between 1280 - 1480.");
+  	i6RDMTU.rmempty = false;
+	i6RDMTU.template = "6rd/value"
+	i6RDMTU.default = luci.model.uci.cursor():get("mantun", "static", "i6rdMTU") or "1280"
+	i6RDMTU.largedescription = "The largest packet size of IPv6 over the 6rd tunnel interface .Its also used for PMTU discovery."
+	function i6RDMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				i6RDMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+        refreshButton = m:option(Button,"Refresh"," ");
+	refreshButton.name = "Refresh";
+	refreshButton.isButton = true;
+	refreshButton.buttonValue = "Refresh"
+	refreshButton.buttonName = "refresh"
+	refreshButton.template = "6rd/button"
+	refreshButton.inputstyle = "reload"
+         
+---- Static Configuration End Here ---
+
+table.insert(returnForms, mantun) -- make sure this form is returned
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/disabletunnel.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/disabletunnel.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,31 @@
+require "luci.ip"
+
+local returnForms = {}
+
+local function getTunnelMode()
+   local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+	mantun = Map("mantun", "Disabled tunnel", "This page allows to disable tunnel configuration. ")
+	general = mantun:section(NamedSection, "general", "general", "Tunnel Configuration")
+
+	TunnelType = general:option(ListValue,"TunnelType", "Tunnel Type", "Softwire is not selectable.")
+	TunnelType:value("0","DS-lite")
+	TunnelType:value("2","6RD")
+	TunnelType:value("3","Disable")
+	TunnelType.rmempty = false
+	TunnelType.fname = "TunnelType"
+	TunnelType.onValueChange = "0"
+	TunnelType.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelType=0"
+	TunnelType.setForceDefault = "3"
+	TunnelType.template = "6rd/lttypevalue"
+--[[
+	if luci.http.formvalue("cbid.mantun.general.TunnelType") ~= nil then
+		os.execute("sleep 2 && /etc/init.d/tunnelscript start >> /tmp/createTunnel.log 2<&1 &")
+	end  
+]]--
+	table.insert(returnForms, mantun)
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/dslite-dhcp.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/dslite-dhcp.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,293 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+local function getRemoteip6addrValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_softwire]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getLocalip6addrValue()
+	form = luci.util.exec([[cat /tmp/ip6_address]])
+	if form ~= nil then
+		local len = luci.util.exec([[cat /tmp/ip6_prefixlen]])
+		if len ~= nil and #len > 0 then
+--			return form .. "/" .. len
+		end
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6dnsValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_name_servers]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIp6gatewayValue()
+	form = luci.util.exec([[cat /tmp/dhcp6_defgateway]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getPrefixDelegationValue()
+	form = luci.util.exec([[cat /tmp/ip6_prefix]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+
+local function getIpv6gateValue()
+	form = luci.util.exec([[echo $(ifconfig br-lan | grep "Scope:Global" | grep 'inet6 addr:'| cut -d\s -f2 | awk '{ print $3}')]])
+	if form ~= nil then
+		return form
+	end
+	return nil;
+end
+local ajax = luci.http.formvalue("ajax")
+if ajax then
+	luci.http.prepare_content("text/plain")
+	local varData = luci.http.formvalue("dataVar")
+	if varData ~= nil and #varData > 1 and varData ~= "Updated_Prefix" then
+		if varData == "aftr6addr" then 
+			luci.http.write(getRemoteip6addrValue().."\n");			
+		end
+		if varData == "localip6addr" then 
+			luci.http.write(getLocalip6addrValue() .."\n");			
+		end
+		if varData == "dhcpv6_name_servers" then 
+			luci.http.write(getIpv6dnsValue().."\n");			
+		end
+		if varData == "ip6gateway" then 
+			luci.http.write(getIp6gatewayValue() .."\n");			
+		end
+		if varData == "prefixDelegation" then 
+			luci.http.write(getPrefixDelegationValue().."\n");			
+		end
+		if varData == "ipv6gate" then 
+			luci.http.write(getIpv6gateValue().."\n");			
+		end
+	else
+		luci.http.write(" \n");
+	end
+
+
+else
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+             -- "name of the cfg file", "page title", "description"
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+                	local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-Static")
+                        luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=0")                                                          
+		end                                                                                                                                                 
+	end
+
+	TunnelMode:depends("TunnelType","0")
+	TunnelMode.onValueChange = "0"
+	TunnelMode.fname = "TunnelMode"
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-Static?cbid.mantun.general.TunnelMode=0&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue"
+
+	overSection = mantun:section(NamedSection, "overridetunnel", "mantun", 
+				   "DS-Lite parameters","IPv6 parameters are specified here.")
+
+	dSLiteCapL = overSection:option(DummyValue, " "," ");
+	dSLiteCapL.forcedtitle = "DS-Lite Configuration";
+	dSLiteCapL.styleClass = "cbi-blue-bold-left";
+	dSLiteCapL.template = "6rd/dvalue"
+
+	dSLiteCapR = overSection:option(DummyValue, " "," ");
+	dSLiteCapR.statusString = "DHCP Values";
+	dSLiteCapR.styleClass = "cbi-blue-bold";
+	dSLiteCapR.isAjaxEnabled = true;
+	dSLiteCapR.reloadValues = true;
+	dSLiteCapR.template = "softwire/dvalue"
+
+	aftr6addr = overSection:option(DummyValue, "Remoteip6addr", "AFTR IPv6 Address")
+	aftr6addr.rmempty = false
+	aftr6addr.template = "6rd/dvalue"
+	aftr6addr.name = "aftr6addr"
+	local remoteip6addr = getRemoteip6addrValue()
+	if remoteip6addr ~= nil and #remoteip6addr > 0 then
+		aftr6addr.statusString = remoteip6addr
+	else
+		aftr6addr.statusString = " "
+	end
+
+	localip6addr = overSection:option(DummyValue, "Localip6addr", "WAN IPv6 Address")
+	localip6addr.rmempty = true
+	localip6addr.template = "6rd/dvalue"
+	localip6addr.name = "localip6addr"
+	local ip6addr = getLocalip6addrValue()
+	if ip6addr ~= nil and #ip6addr > 0 then
+		localip6addr.statusString = ip6addr
+	else
+		localip6addr.statusString = " "
+	end
+
+	dhcpv6_name_servers = overSection:option(Value,"Ipv6dns", "Primary DNS (IPv6)","e.g. 2001::2")
+	dhcpv6_name_servers.rmempty = true
+	dhcpv6_name_servers.template = "6rd/value"
+	dhcpv6_name_servers.statusString = getIpv6dnsValue()
+	dhcpv6_name_servers.name = "dhcpv6_name_servers"
+	dhcpv6_name_servers.largedescription="IPv6 address of DNS server provided by ISP used for FQDN resolution."
+	local dns6addr = getIpv6dnsValue()
+	if dns6addr ~= nil and #dns6addr > 0 then
+		dhcpv6_name_servers.statusString = dns6addr
+	else
+		dhcpv6_name_servers.statusString = " "
+	end
+
+
+
+	ip6gateway = overSection:option(Value, "ip6gateway", "IPv6 WAN default gateway", "e.g. 2001::1")
+	ip6gateway.rmempty = true
+	ip6gateway.template = "6rd/value"
+	ip6gateway.name = "ip6gateway"
+	ip6gateway.largedescription = "IPv6 address of the Default Gateway provided by ISP used to route non-local ipv6 packets."
+	local v6gateway = getIp6gatewayValue()
+	if v6gateway ~= nil and #v6gateway > 0 then
+		ip6gateway.statusString = v6gateway
+	else
+		ip6gateway.statusString = " "
+	end
+
+
+	prefixDelegation = overSection:option(DummyValue, "PrefixDelegation", "IPv6 Prefix Delegation")
+	prefixDelegation.rmempty = false
+	prefixDelegation.template = "6rd/dvalue" 
+	prefixDelegation.name = "prefixDelegation"
+	local v6prefix = getPrefixDelegationValue()
+	if v6prefix ~= nil and #v6prefix > 0 then
+		prefixDelegation.statusString = v6prefix
+	else
+		prefixDelegation.statusString = " "
+	end
+
+
+	ipv6gate = overSection:option(DummyValue, "Ipv6gate", "IPv6 LAN Address")
+	ipv6gate.rmempty = false
+	ipv6gate.template = "6rd/dvalue"
+	ipv6gate.name = "ipv6gate"
+	local v6prefix = getIpv6gateValue()
+	if v6gate ~= nil and #v6gate > 0 then
+		ipv6gate.statusString = v6gate
+	else
+		ipv6gate.statusString = " "
+	end
+
+
+	headerFieldR = overSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+
+  	DFBitState = overSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= overSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.overridetunnel.v4SMTU"
+	v6SMTU.opt="sub"
+
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= overSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.");
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "overridetunnel", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.overridetunnel.v6SMTU"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	v4SMTU.opt="add"
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+end
+return unpack(returnForms)
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/dslite-static.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/model/cbi/dslite-static.lua	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,162 @@
+--[[
+LuCI - Lua Configuration Interface
+]]--
+
+require "luci.ip"
+
+local returnForms = {}
+
+-- returns tunnel mode (DS-Lite, DS-Lite or disabled)
+local function tunnelMode()
+   -- try to get the value using form (i.e. modified value)
+   local form = luci.http.formvalue("cbid.mantun.general.TunnelMode")
+   if form ~= nil then
+      return form
+   end
+
+   -- if not possible, then use value from config
+   form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")
+   return form
+end
+
+
+
+	mantun = Map("mantun", "DS-Lite configuration", "This page allows tunnel configuration.") 
+
+	m = mantun:section(NamedSection, "general", "general", "General tunnel configuration",
+		"This section defines fundamental tunnel configuration modes. Those changes " ..
+		"are saved in mantun configuration file. After you change anything is " ..
+		"this section, make sure that you hit SAVE button to"..
+		" display relevant part of the configuration page.")
+
+	TunnelType = m:option(ListValue,"TunnelType", "Tunnel type",
+		      "This parameter defines how tunnel should be configured. "..
+		      "There are 3 possible modes: DS-Lite, DS-Lite, 6RD or Disabled. ")
+	
+	TunnelType:value("0","DS-lite")                                                                                                                             
+	TunnelType:value("2","6RD")                                                                                                                                 
+	TunnelType:value("3","Disable")                                                                                                                             
+	TunnelType.rmempty = false                                                                                                                                  
+	TunnelType.fname = "TunnelType";                                                                                                                            
+	TunnelType.onValueChange = "2";                                                                                                                             
+	TunnelType.moveTo = "/admin/6rd/6RD-Static?cbid.mantun.general.TunnelType=2"
+	TunnelType.template = "6rd/lttypevalue"
+	TunnelType.setForceDefault = "0"
+
+        TunnelMode = m:option(ListValue,"TunnelMode", "Static or DHCP");                                                                                            
+        TunnelMode:value("0","Static")                                                                                                                              
+        TunnelMode:value("1","DHCP")                                                                                                                                
+        TunnelMode.value = tunnelMode();                                                                                                                            
+        TunnelMode.rmempty = false                                                                                                                                  
+        local tMode = luci.http.formvalue("cbid.mantun.general.TunnelMode");                                                                                         
+	if tMode ~= nil and #tMode > 0 then                                                                                                                         
+        	TunnelMode.setForceDefault = tMode                                                                                                                  
+        else                                                                                                                                                        
+        	local form = luci.model.uci.cursor():get("mantun", "general", "TunnelMode")                                                                          
+                if form ~= nil and tonumber(form) == 1 then                                                                                                         
+			local request_uri = luci.dispatcher.build_url("admin", "softwire", "DS-Lite-DHCP")
+			luci.http.redirect( request_uri .. "?cbid.mantun.general.TunnelMode=1" )
+		end                                                                                                                                                 
+	end
+	                                                                                                                                                         
+	TunnelMode:depends("TunnelType","0")                                                                                                                        
+	TunnelMode.onValueChange = "1";
+	TunnelMode.fname = "TunnelMode";                                                                                                                            
+	TunnelMode.moveTo = "/admin/softwire/DS-Lite-DHCP?cbid.mantun.general.TunnelMode=1&#38;cbid.mantun.general.TunnelType=0"
+	TunnelMode.template = "6rd/lvalue" 
+      
+	mantunDsLite = Map("mantun", "DS-Lite manual configuration",
+			 "This section defines DS-Lite configuration "..
+			 "running in static (manual) mode. Parameters "..
+			 "will be stored in /etc/config/mantun configuration file.")
+
+	dsStaticSection = mantun:section(NamedSection, "static", "static", 
+					     "DS-Lite parameters","Those parameters define static (manual) configuration of DS-Lite tunnel.")
+	localip6addr  = dsStaticSection:option(Value,"Localip6addr", "B4 WAN IPv6 Address", "e.g. 2001:db8::1/32")
+	localip6addr.rmempty = false
+	localip6addr.template = "6rd/value"
+	localip6addr.largedescription = "IPv6 address for the wan interface provided by ISP for basic ipv6 connectivity."
+
+	remoteip6addr = dsStaticSection:option(Value,"Remoteip6addr", "AFTR IPv6 Address", "e.g. 2001:db8::8")
+	remoteip6addr.rmempty = false
+	remoteip6addr.template = "6rd/value"
+	remoteip6addr.largedescription = "IPv6 address of the ISP's AFTR housed by ISP used for remote tunnel endpoint."
+
+	lanipv6addr   = dsStaticSection:option(Value,"LANip6addr", "B4 LAN IPv6 Address", "e.g. 2003:23::1/64")
+	lanipv6addr.rmempty = false
+	lanipv6addr.largedescription = "Configure ipv6 address with the prefix length of /64 accordingly or specified by ISP from the subnet of delegated prefix in the immidiate below button."
+	lanipv6addr.template = "6rd/value"
+
+	pd            = dsStaticSection:option(Value,"PrefixDelegation", "IPv6 Delegated Prefix", "e.g. 2003:23::/64")
+	pd.rmempty = false
+	pd.largedescription = "Configure ipv6 prefix provided by ISP which is used for configuring this B4 LAN ipv6 address."
+	pd.template = "6rd/value"
+	
+	ip6gw         = dsStaticSection:option(Value,"Ipv6gate", "IPv6 Gateway Address", "IPv6 Nexthop Address")
+	ip6gw.rmempty = false
+	ip6gw.largedescription = "Configure IPv6 address of the gateway provided by ISP for the routing of non-local ipv6 pcakets."
+	ip6gw.template = "6rd/value"
+
+	ip6dns        = dsStaticSection:option(Value,"Ipv6dns", "Primary DNS", "e.g. 2001:db8::9")
+	ip6dns.rmempty = false
+	ip6dns.largedescription = "Configure IPv6 address of DNS server provided by ISP used for FQDN resolution.use space for more than one ip address entry."
+	ip6dns.template = "6rd/value"
+
+	headerFieldR = dsStaticSection:option(DummyValue, " "," ")
+	headerFieldR.forcedtitle = "Fragmentation"
+	headerFieldR.styleClass = "cbi-blue-bold-left"
+	headerFieldR.template = "6rd/dvalue"
+
+  	DFBitState = dsStaticSection:option(Flag, "DFBitState", "DF Bit Set", "Enable/Disable fragment toggle.")
+  	DFBitState.rmempty = false
+	DFBitState.largedescription = "If DF Bit checkbox is checked - Packet is forwarded and icmp packet fragmentation error message send to host. if DF Bit checkbox is unchecked - Packet dropped and icmp packet fragmentation error message send to host."
+	DFBitState.template = "6rd/fvalue"
+
+  	v6SMTU= dsStaticSection:option(Value, "v6SMTU", "IPv6 SMTU", "Please enter IPv6 SMTU length between 1280 - 1480.");
+  	v6SMTU.rmempty = false;
+	v6SMTU.template = "6rd/value"
+	v6SMTU.isUpdateMTU = true
+	v6SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v6SMTU") or "1280"
+	v6SMTU.onlostfocus = "cbid.mantun.static.v4SMTU"
+	v6SMTU.opt="sub"
+	v6SMTU.largedescription = "The largest packet size of IPv6 over the wan interface .Its also used for PMTU discovery."
+	function v6SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v6SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+  	v4SMTU= dsStaticSection:option(Value, "v4SMTU", "IPv4 SMTU", "Please enter IPv4 SMTU length between 1280 - 1480.")
+  	v4SMTU.rmempty = false;
+	v4SMTU.template = "6rd/value"
+	v4SMTU.default = luci.model.uci.cursor():get("mantun", "static", "v4SMTU") or "1280"
+	v4SMTU.onlostfocus = "cbid.mantun.static.v6SMTU"
+	v4SMTU.opt="add"
+	v4SMTU.largedescription = "The Largest Packet size of IPv4 over the dslite tunnel.Its only used for IPv4 PMTU discovery.IPv4 packet will not fragment at this tunnel endpoint."
+	function v4SMTU:validate(value) 
+		local v = tonumber(value)
+		if (v ~= nil ) then
+			if (v > 1279 and v < 1481 ) then
+				return v
+			else
+				v4SMTU.message = "Please enter valid MTU";
+		    		return nil
+			end 
+		else
+			return nil
+		end
+	end
+
+
+	table.insert(returnForms, mantun)
+
+
+return unpack(returnForms)
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/button.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/button.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,25 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: button.htm 3558 2008-10-11 11:40:44Z Cyrus $
+
+-%>
+<%+6rd/full_valueheader%>
+	<% if self:cfgvalue(section) ~= false then %>
+		<% if self.isButton then %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+		<% else %>
+			<input class="cbi-input-<%=self.inputstyle or "button" %>" type="submit"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", self.title)%> />
+		<% end %>
+	<% else %>
+		-
+	<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+6rd/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+		<%- if self.statusString and  #self.statusString > 0 then -%>
+			<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+				<%-=self.statusString-%>
+			</label>
+		<%- end -%>
+		<% if self.description and #self.description > 0 then -%>
+			<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+				<br />
+			<%- end %>
+			<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+				<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+				<%=self.description%>
+			</div>
+		<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,155 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=WANip4addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#WANip4addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=tunnelStatus",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#TunnelStatus').html(lines[0]);
+						}
+					});
+					<%- if self.isDhpc then -%>
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=IPv46rdBr",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDBr').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefixLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefixLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=6rdPrefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#i6RDPrefix').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=SubnetMaskLength",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$('label#IPv4MaskLength').html(lines[0]);
+							}
+						});
+						$.ajax({
+							method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=Updated_Prefix",
+							success: function(html){
+								var lines;
+								lines=html.split("\n");
+								$("label#DHCP").html(lines[0]);	
+							}
+						});
+					<%- end -%>
+				}
+			<%- end -%>
+			$('#ajax-6RDPrefixCalc').click(function() {
+				var inputStr = '';
+				jQuery.each($('form'),function() {
+					jQuery.each($(this).find('input'),function() {
+						if( $(this).attr("name") ){
+							if($(this).attr("type") != "submit"){
+								if( $(this).attr("type") != "button" ){
+									inputStr = inputStr + "&#38;" + $(this).attr("name") + '=' + $(this).val();
+								}
+							}
+						}
+					});
+				});
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + inputStr,
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#6RDPrefixCalc").html(lines[0]);	
+					}
+				});
+			});
+			$('#ajax-reconnect').click(function() {
+				$.ajax({
+					method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=reconnect6rdtunnel",
+					success: function(html){
+						var lines;
+						lines=html.split("\n");
+						$("label#TunnelStatus").html(lines[0]);	
+					}
+				});
+			});
+			$('#refresh').click(function() {
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			});
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/fvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/fvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,17 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: fvalue.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input class="cbi-input-checkbox" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="checkbox"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self:cfgvalue(section) == self.enabled, "checked", "checked") %> value="1" />
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/lttypevalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/lttypevalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,54 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect) {
+			if(objSelect.value == '0') {
+				window.location.href = "<%=controller%>/admin/softwire/DS-Lite-Static?" + "cbid.mantun.general.TunnelType=0"
+			} else if(objSelect.value == '1') {
+				window.location.href = "<%=controller%>/admin/softwire/Softwire-Static?" + "cbid.mantun.general.TunnelType=1"
+			} else if(objSelect.value == '2') {
+				window.location.href = "<%=controller%>/admin/6rd/6RD-Static?" + "cbid.mantun.general.TunnelType=2"
+			} else if(objSelect.value == '3') {
+				window.location.href = "<%=controller%>/admin/6rd/DisableTunnel?" + "cbid.mantun.general.TunnelType=3"
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/lvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/lvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: lvalue.htm 5190 2009-07-31 23:36:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+<% if self.widget == "select" then %>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		function moveto<%=self.fname%> (objSelect){
+			if(objSelect.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<select class="cbi-input-select" onload="moveto<%=self.fname%>(this);" onchange="moveto<%=self.fname%>(this);"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self.setForceDefault or self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%> <%=self.default%></option>
+	<%- end %>
+	</select>
+	<% else %>
+	<select class="cbi-input-select" onchange="cbi_d_update(this.id)"<%= attr("id", cbid) .. attr("name", cbid) .. ifattr(self.size, "size") %>>
+	<% for i, key in pairs(self.keylist) do -%>
+		<option id="cbi-<%=self.config.."-"..section.."-"..self.option.."-"..key%>"<%= attr("value", key) .. ifattr((self:cfgvalue(section) or self.default) == key, "selected", "selected") %>><%=striptags(self.vallist[i])%></option>
+	<%- end %>
+	</select>
+	<% end %>
+<% elseif self.widget == "radio" then
+	local c = 0
+	for i, key in pairs(self.keylist) do
+	c = c + 1
+%>
+	<input class="cbi-input-radio" onclick="cbi_d_update(this.id)" onchange="cbi_d_update(this.id)" type="radio"<%= attr("id", cbid..c) .. attr("name", cbid) .. attr("value", key) .. ifattr(self:cfgvalue(section) == key, "checked", "checked") %> />
+	<label<%= attr("for", cbid..c) %>><%=self.vallist[i]%></label><br />
+<% if c == self.size then c = 0 %><br />
+<% end end %>
+<% end %>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,6 @@
+<%+header%>
+<h2>Tunneling Configuration</h2>
+
+<p>This section of the Web GUI is dedicated to 6RD/DS-Lite tunnel configuration:
+</p>
+<%+footer%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/value.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/6rd/value.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,48 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: value.htm 3530 2008-10-07 15:41:15Z jow $
+
+-%>
+<%+6rd/full_valueheader%>
+	<input type="<%=self.password and 'password" class="cbi-input-password' or 'text" class="cbi-input-text' %>" <% if self.onlostfocus and self.opt then -%> onblur="javsacript:checkSMTU(this, '<%=self.onlostfocus%>' , '<%=self.opt or "none" %>');" <% end -%>   onchange="cbi_d_update(this.id);moveto();"<%= attr("name", cbid) .. attr("id", cbid) .. attr("value", (self.forcedvalue or self:cfgvalue(section) or self.default )) .. ifattr(self.size, "size")%> />
+	<% if #self.keylist > 0 then -%>
+	<script type="text/javascript">
+		cbi_combobox_init('<%=cbid%>', {
+		<%-
+			for i, k in ipairs(self.keylist) do
+		-%>
+			<%-=string.format("%q", k) .. ":" .. string.format("%q", self.vallist[i])-%>
+			<%-if i<#self.keylist then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+		}, '<%- if not self.rmempty and not self.optional then -%>
+			<%-:cbi_select-%>
+		<%- end -%>', '
+		<%- if self.combobox_manual then -%>
+			<%-=self.combobox_manual-%>
+		<%- else -%>
+			<%-:cbi_manual-%>
+		<%- end -%>');
+	</script>
+	<% end -%>
+	<% if self.onValueChange and #self.onValueChange > 0 and self.moveTo and #self.moveTo > 0 then -%>
+	<script type="text/javascript">
+		moveto (){
+			if(this.value == <%=self.onValueChange%>){
+				window.location.href = "<%=controller%><%=self.moveTo%>";
+			}
+			return true;
+		}
+	</script>
+	<% end -%>
+<%+6rd/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/customtbl.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/customtbl.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,143 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: tblsection.htm 5268 2009-08-13 17:14:25Z jow $
+
+-%>
+<%-
+local rowcnt = 1
+function rowstyle()
+	rowcnt = rowcnt + 1
+	return (rowcnt % 2) + 1
+end
+
+local rowcount = 0
+
+local maxports = 5
+
+-%>
+
+<!-- tblsection -->
+<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>">
+	<% if self.title and #self.title > 0 then -%>
+		<legend><%=self.title%></legend>
+	<%- end %>
+	<div class="cbi-section-descr"><%=self.description%></div>
+	<div class="cbi-section-node">
+		<%- local count = 0 -%>
+		<table class="cbi-section-table">
+			<tr class="cbi-section-table-titles">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectionhead then -%>
+					<th class="cbi-section-table-cell"><%=self.sectionhead%></th>
+				<%- else -%>
+					<th>&#160;</th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell">
+				<%- if k.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=k.titleref%>"><%- end -%>
+					<%-=k.title-%>
+				<%- if k.titleref then -%></a><%- end -%>
+				</th>
+			<%- count = count + 1; end; end; if self.extedit or self.remove then -%>
+				<th class="cbi-section-table-cell">&#160;</th>
+			<%- count = count + 1; end -%>
+			</tr>
+			<tr class="cbi-section-table-descr">
+			<%- if not self.anonymous then -%>
+				<%- if self.sectiondesc then -%>
+					<th class="cbi-section-table-cell"><%=self.sectiondesc%></th>
+				<%- else -%>
+					<th></th>
+				<%- end -%>
+			<%- end -%>
+			<%- for i, k in pairs(self.children) do if not k.optional then -%>
+				<th class="cbi-section-table-cell"><%=k.description%></th>
+			<%- end; end; if self.extedit or self.addremove then -%>
+				<th class="cbi-section-table-cell"></th>
+			<%- end -%>
+			</tr>
+			<%- local isempty = true
+			    for i, k in ipairs(self:cfgsections()) do
+					section = k
+					isempty = false
+					scope = { valueheader = "cbi/cell_valueheader", valuefooter = "cbi/cell_valuefooter" }
+			-%>
+			<tr class="cbi-section-table-row<% if self.extedit or self.rowcolors then %> cbi-rowstyle-<%=rowstyle()%><% end %>" id="cbi-<%=self.config%>-<%=section%>">
+				<% rowcount = rowcount + 1 
+				   if not self.anonymous then -%>
+					<th><h3><%=k%></h3></th>
+				<%- end %>
+
+
+				<%-
+					for k, node in ipairs(self.children) do
+						if not node.optional then
+							node:render(section, scope or {})
+						end
+					end
+				-%>
+
+				<%- if self.extedit or self.addremove then -%>
+					<td class="cbi-section-table-cell">
+						<%- if self.extedit then -%>
+							<a href="
+							<%- if type(self.extedit) == "string" then -%>
+								<%=self.extedit:format(section)%>
+							<%- elseif type(self.extedit) == "function" then -%>
+								<%=self:extedit(section)%>
+							<%- end -%>
+							" title="<%:edit%>"><img style="border: none" src="<%=resource%>/cbi/edit.gif" alt="<%:edit%>" /></a>
+						<%- end; if self.addremove then %>
+							<input type="image" value="<%:cbi_del%>" name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:cbi_del%>" title="<%:cbi_del%>" src="<%=resource%>/cbi/remove.gif" />
+						<%- end -%>
+					</td>
+				<%- end -%>
+			</tr>
+			<%- end -%>
+
+			<%- if isempty then -%>
+			<tr class="cbi-section-table-row">
+				<td colspan="<%=count%>"><em><br /><%:cbi_sectempty%></em></td>
+			</tr>
+			<%- end -%>
+		</table>
+
+		<% if self.error then %>
+			<div class="cbi-section-error">
+				<ul><% for _, c in pairs(self.error) do for _, e in ipairs(c) do -%>
+					<li><%=pcdata(e):gsub("\n","<br />")%></li>
+				<%- end end %></ul>
+			</div>
+		<% end %>
+
+		<%- if self.add and (rowcount<self.maxentries) then -%>
+			<% if self.template_addremove then include(self.template_addremove) else -%>
+			<div class="cbi-section-create cbi-tblsection-create">
+				<% if self.anonymous then %>
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" title="<%:cbi_add%>" />
+				<% else %>
+					<% if self.invalid_cts then -%><div class="cbi-section-error"><% end %>
+					<input type="text" class="cbi-section-create-name" name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>" />
+					<input class="cbi-button cbi-button-add" type="submit" value="<%:cbi_add%>" title="<%:cbi_add%>" />
+					<% if self.invalid_cts then -%>
+						<br /><%:cbi_invalid%></div>
+					<%- end %>
+				<% end %>
+			</div>
+			<%- end %>
+		<%- end -%>
+	</div>
+</fieldset>
+<h2>Overall info</h2>
+<p><% write (tostring(rowcount)) %> port forwarding rules currently configured. Maximum number of rules <% write (tostring(self.maxentries)) %> are allowed.</p>
+<!-- /tblsection -->
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/dvalue.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/dvalue.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,32 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: dvalue.htm 3367 2008-09-19 10:42:02Z Cyrus $
+
+-%>
+
+<%+softwire/full_valueheader%>
+<%- if self.overwrite and  self.value and self.name then %>
+	<label id="<%=self.name%>" name="<%=self.name%>" > <%=self.value%> </label>
+	<%- if self.isButton and self.buttonName and  self.buttonValue then -%>
+		<input class="cbi-input-6rd-reload" type="button" name="<%=self.buttonName%>" id="<%=self.buttonName%>" value="<%=self.buttonValue%>" />
+	<%- end -%>
+<%- else %>
+<% if self.href then %><a href="<%=self.href%>"><% end -%>
+	<%- if self.statusString then -%>
+	<%- else -%>
+	<%=luci.util.pcdata(self:cfgvalue(section))%>
+	<%- end -%>
+<%- if self.href then %></a><%end%>
+&#160;
+	<input type="hidden" id="<%=cbid%>" value="<%=luci.util.pcdata(self:cfgvalue(section))%>" />
+<%- end %>
+<%+softwire/full_valuefooter%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/full_valuefooter.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/full_valuefooter.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,49 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valuefooter.htm 4272 2009-02-23 22:53:42Z Cyrus $
+
+-%>
+	<%- if self.statusString and  #self.statusString > 0 then -%>
+		<label class="<%=self.styleClass or "cbi-value-status" %>" name="<%=self.name%>" id="<%=self.name%>">
+			<%-=self.statusString-%>
+		</label>
+	<%- end -%>
+	<% if self.description and #self.description > 0 then -%>
+		<% if not luci.util.instanceof( self, luci.cbi.Flag ) then -%>
+			<br />
+		<%- end %>
+		<div class="cbi-value-description" <% if self.largedescription and #self.largedescription > 0 then %> title="<%=self.largedescription%>" <% end %>>
+			<span class="cbi-value-helpicon"><img src="<%=resource%>/cbi/help.gif" alt="<%:help%>" /></span>
+			<%=self.description%>
+		</div>
+	<%- end %>
+	<%- if self.title and #self.title > 0 then -%>
+	</div>
+	<%- end -%>
+</div>
+
+<% if #self.deps > 0 then -%>
+	<script type="text/javascript" id="cbip-<%=self.config.."-"..section.."-"..self.option%>">
+		<% for j, d in ipairs(self.deps) do -%>
+			cbi_d_add("cbi-<%=self.config.."-"..section.."-"..self.option..d.add%>", {
+		<%-
+			for k,v in pairs(d.deps) do
+		-%>
+			<%-=string.format('"cbid.%s.%s.%s"', self.config, section, k) .. ":" .. string.format("%q", v)-%>
+			<%-if next(d.deps, k) then-%>,<%-end-%>
+		<%-
+			end
+		-%>
+			}, "cbip-<%=self.config.."-"..section.."-"..self.option..d.add%>");
+		<%- end %>
+	</script>
+<%- end %>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/full_valueheader.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/full_valueheader.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,110 @@
+<%#
+LuCI - Lua Configuration Interface
+Copyright 2008 Steven Barth <steven@midlink.org>
+Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+	http://www.apache.org/licenses/LICENSE-2.0
+
+$Id: full_valueheader.htm 3170 2008-09-06 22:37:56Z jow $
+
+-%>
+
+<div class="cbi-value<% if self.error and self.error[section] then %> cbi-value-error<% end %>" id="cbi-<%=self.config.."-"..section.."-"..self.option%>">
+<%- if self.title and #self.title > 0 then -%>
+	<script>
+	<%- if self.isUpdateMTU then -%>
+		function checkSMTU(lostID, changeID, action){
+			if (action == "add"){
+				document.getElementById(changeID).value = parseInt(lostID.value) + 40
+			} else if (action == "sub"){
+				document.getElementById(changeID).value = parseInt(lostID.value) - 40
+			}
+		}
+	<%- end -%>
+	</script>
+	<%- if self.isAjaxEnabled then -%>
+		<%- if self.textString and  #self.textString > 0 then -%>
+		<label id="Updated_Prefix" name="Updated_Prefix" > <%=self.textString%> </label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+		<script>
+			$(document).ready(function(){
+			<%- if self.reloadValues then -%>
+				var timerId = setInterval(refreshData,<%=self.tunnelPingTime or 10000%>);
+				function refreshData(){
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=aftr6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#aftr6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=localip6addr",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#localip6addr').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=dhcpv6_name_servers",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#dhcpv6_name_servers').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ip6gateway",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$('label#ip6gateway').html(lines[0]);
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=prefixDelegation",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#prefixDelegation").html(lines[0]);	
+						}
+					});
+					$.ajax({
+						method: "get",url: "<%=REQUEST_URI%>?ajax=1" + "&#38;" + "dataVar=ipv6gate",
+						success: function(html){
+							var lines;
+							lines=html.split("\n");
+							$("label#ipv6gate").html(lines[0]);	
+						}
+					});
+				}
+			<%- end -%>
+		});
+		</script>
+	<%- else -%>
+		
+		<%- if self.forcedtitle and # self.forcedtitle > 0 then-%>
+			<label class="<%=self.styleClass or "cbi-value-title"%>"<%= attr("for", cbid) %>>
+				<%-=self.forcedtitle-%> 
+			</label>
+		<%- else -%>
+			<label class="cbi-value-title"<%= attr("for", cbid) %>>
+			<%- if self.titleref then -%><a title="<%=self.titledesc or translate('cbi_gorel')%>" class="cbi-title-ref" href="<%=self.titleref%>"><%- end -%>
+				<%-=self.title-%>
+			<%- if self.titleref then -%></a><%- end -%>
+			</label>
+		<%- end -%>
+	<%- end -%>
+		<div class="cbi-value-field"><%- end -%>
Index: luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/overview.htm
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ luci-0.10+svn6791/ipkg-ubicom32/luci-app-ipv6tunnel/usr/lib/lua/luci/view/softwire/overview.htm	2011-04-07 12:21:16.000000000 +0300
@@ -0,0 +1,12 @@
+<%+header%>
+<h2>Softwire configuration</h2>
+
+<p>This section of the Web GUI is dedicated to tunnel configuration:
+Softwire (IPv6 over IPv4) or <abbr title="Dual-Stack
+Lite">DS-Lite</abbr> (IPv4 over IPv6). Related topics - 
+fragmentation, <abbr title="Maximum Transmission Unit">MTU</abbr>, 
+services and tunnel status, portproxy (a tool used for automatic port
+configuration, using NAT-PMP and UPnP) and manual port forwarding
+configuration are also available.</p>
+
+<%+footer%>
Index: luci-0.10+svn6791/libs/core/root/etc/config/ucitrack
===================================================================
--- luci-0.10+svn6791.orig/libs/core/root/etc/config/ucitrack	2011-04-07 12:22:37.000000000 +0300
+++ luci-0.10+svn6791/libs/core/root/etc/config/ucitrack	2011-04-07 12:23:59.000000000 +0300
@@ -47,3 +47,6 @@
 
 config tinyproxy
 	option init tinyproxy
+
+config mantun
+	option init network
