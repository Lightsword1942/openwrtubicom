diff -Naur miniupnpd-bsp32.a/upnphttp.c miniupnpd-bsp32.b/upnphttp.c
--- miniupnpd-bsp32.a/upnphttp.c	2011-06-28 15:14:25.998924238 +0300
+++ miniupnpd-bsp32.b/upnphttp.c	2011-06-28 16:12:46.554924915 +0300
@@ -130,6 +130,32 @@
 				h->req_Callback = p + 1;
 				h->req_CallbackLen = MAX(0, n - 1);
 			}
+			else if (!strncasecmp(line, "NT", 2)) {
+				/*
+				 * Check for malformed NT headers like as "NTEXTRA: Extra header \n\r"
+				 */
+				for (p = line + 2; p < colon; p++) {
+					if (!isspace(*p)) {
+						break;
+					}
+				}
+
+				/*
+				 * NT header format is fine, so let to go on.
+				 */
+				if (p == colon) {
+					p = colon + 1;
+					while (isspace(*p)) {
+						p++;
+					}
+					n = 0;
+					while (!isspace(p[n]) && p[n] != '\n' && p[n] != '\r') {
+						n++;
+					}
+					h->req_NT = p;
+					h->req_NTLen = n;
+				}
+			}
 			else if(strncasecmp(line, "SID", cmp_len)==0)
 			{
 				p = colon + 1;
@@ -324,7 +350,16 @@
 	syslog(LOG_DEBUG, "Callback '%.*s' Timeout=%d",
 	       h->req_CallbackLen, h->req_Callback, h->req_Timeout);
 	syslog(LOG_DEBUG, "SID '%.*s'", h->req_SIDLen, h->req_SID);
-	if(!h->req_Callback && !h->req_SID) {
+
+	/*
+	 * 400 Bad Request. If SID header and one of NT or CALLBACK headers are present,
+	 * the publisher must respond with HTTP error 400 Bad Request.
+	 */
+	if (h->req_SID && (h->req_NT || h->req_Callback)) {
+		BuildResp2_upnphttp(h, 400, "Bad Request", 0, 0);
+		SendResp_upnphttp(h);
+		CloseSocket_upnphttp(h);
+	} else if(!h->req_Callback && !h->req_SID) {
 		/* Missing or invalid CALLBACK : 412 Precondition Failed.
 		 * If CALLBACK header is missing or does not contain a valid HTTP URL,
 		 * the publisher must respond with HTTP error 412 Precondition Failed*/
@@ -337,16 +372,40 @@
 	 * - Send the initial event message */
 /* Server:, SID:; Timeout: Second-(xx|infinite) */
 		if(h->req_Callback) {
-			sid = upnpevents_addSubscriber(path, h->req_Callback,
-			                               h->req_CallbackLen, h->req_Timeout);
-			h->respflags = FLAG_TIMEOUT;
-			if(sid) {
-				syslog(LOG_DEBUG, "generated sid=%s", sid);
-				h->respflags |= FLAG_SID;
-				h->req_SID = sid;
-				h->req_SIDLen = strlen(sid);
+			/*
+			 * Missing or Invalid CALLBACK check
+			 */
+			if (memcmp(h->req_Callback, "http://", strlen("http://"))) {
+				BuildResp2_upnphttp(h, 412, "Precondition Failed", 0, 0);
+				SendResp_upnphttp(h);
+				CloseSocket_upnphttp(h);
+				return;
+			}
+
+			/*
+			 * Check for 412.
+			 * 412 Precondition Failed. If NT header does not equal upnp:event,
+			 * the publisher must respond with HTTP error 412 Precondition Failed.
+			 */
+			if (h->req_NT && !memcmp(h->req_NT, "upnp:event", h->req_NTLen)) {
+				sid = upnpevents_addSubscriber(path, h->req_Callback,
+				                               h->req_CallbackLen, h->req_Timeout);
+				h->respflags = FLAG_TIMEOUT;
+				if(sid) {
+					syslog(LOG_DEBUG, "generated sid=%s", sid);
+					h->respflags |= FLAG_SID;
+					h->req_SID = sid;
+					h->req_SIDLen = strlen(sid);
+				}
+				BuildResp_upnphttp(h, 0, 0);
+			} else {
+				/*
+				 * 412 is occurred.
+				 */
+				BuildResp2_upnphttp(h, 412, "Precondition Failed", 0, 0);
+				SendResp_upnphttp(h);
+				CloseSocket_upnphttp(h);
 			}
-			BuildResp_upnphttp(h, 0, 0);
 		} else {
 			/* subscription renew */
 			/* Invalid SID
diff -Naur miniupnpd-bsp32.a/upnphttp.h miniupnpd-bsp32.b/upnphttp.h
--- miniupnpd-bsp32.a/upnphttp.h	2011-06-28 15:14:25.998924238 +0300
+++ miniupnpd-bsp32.b/upnphttp.h	2011-06-28 16:12:46.554924915 +0300
@@ -51,6 +51,8 @@
 	int req_Timeout;
 	const char * req_SID;		/* For UNSUBSCRIBE */
 	int req_SIDLen;
+	const char * req_NT;
+	int req_NTLen;
 #endif
 	int respflags;
 	/* response */
